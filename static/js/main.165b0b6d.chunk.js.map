{"version":3,"sources":["fatures/Cards/ui/Card.module.scss","Header/Header.module.scss","assets/avatar.png","components/helpComponent/Input.module.scss","components/helpComponent/Button.module.scss","fatures/01-auth/Profile/ui/SettingProfile.module.scss","fatures/Modal/Modal.module.scss","components/helpComponent/Preloader.module.scss","fatures/01-auth/Profile/ui/Profile.module.scss","fatures/Packs/ui/Packs.module.scss","components/helpComponent/ErrorBar.module.scss","components/helpComponent/Link.module.scss","fatures/01-auth/Login/ui/Login.module.scss","fatures/Pagination/Pagination.module.scss","fatures/LearnPage/ui/LearnPage.module.scss","components/helpComponent/Link.tsx","components/helpComponent/Preloader.tsx","Header/Header.tsx","components/helpComponent/Input.tsx","components/helpComponent/Button.tsx","dal/api.ts","fatures/01-auth/Login/api/loginAPI.ts","fatures/01-auth/InitialApp/appReducer.ts","fatures/01-auth/Login/bll/loginReducer.ts","fatures/01-auth/Login/ui/Login.tsx","fatures/01-auth/Registration/api/regAPI.ts","fatures/01-auth/Registration/bll/registerReducer.ts","fatures/01-auth/Registration/ui/Register.tsx","fatures/01-auth/Forgot/api/recoveryAPI.ts","fatures/01-auth/Forgot/bll/recoveryReducer.ts","fatures/01-auth/Forgot/ui/Forgot.tsx","fatures/01-auth/Forgot/ui/NewPassword.tsx","fatures/Pagination/Pagination.tsx","fatures/Cards/api/cardsAPI.ts","fatures/Packs/api/packsAPI.ts","fatures/Packs/bll/packsReducer.ts","fatures/Search/bll/searchReducer.ts","fatures/Cards/bll/cardsReducer.ts","fatures/Modal/Modal.tsx","components/helpComponent/FormCardsModal.tsx","fatures/Cards/ui/SingleCard.tsx","fatures/LearnPage/ui/LearnPage.tsx","fatures/Cards/ui/Cards.tsx","fatures/01-auth/Profile/ui/Profile.tsx","fatures/Search/Search.tsx","components/helpComponent/FormModal.tsx","fatures/Packs/ui/Pack.tsx","fatures/Packs/ui/Packs.tsx","fatures/01-auth/Profile/ui/SettingProfile.tsx","fatures/01-auth/Profile/ui/ProfileContainer.tsx","Routes/Routes.tsx","components/helpComponent/ErrorBar.tsx","App.tsx","serviceWorker.ts","bll/store.ts","index.tsx"],"names":["module","exports","Link","props","path","title","to","className","style","link","Preloader","load","loading","Header","profile","name","avatar","userPhoto","ava","header","container","color","navBar","isAuth","activeClassName","active","user","src","alt","isLoading","Input","type","checkbox","input","placeholder","Button","disabled","children","btnDisabled","simpleButton","ButtonFile","instance","axios","create","baseURL","withCredentials","loginAPI","email","password","rememberMe","post","result","data","img","put","delete","initialState","initialApp","error","payload","id","success","actions","auth","authMe","dispatch","a","_id","response","Login","useState","setEmail","pass","setPass","setRememberMe","useSelector","state","login","app","useDispatch","onChange","event","target","value","checked","text","onClick","err","signIn","width","marginTop","letterSpacing","regAPI","setSuccess","RegisterForm","React","memo","confirm","setConfirm","register","useEffect","confirmedPassword","length","match","registerThunk","recoveryAPI","html1","html2","token","Forgot","recovery","changeEmailHandler","useCallback","onSendHandler","recoveryThunk","fontWeight","NewPassword","setPassword","useParams","setNewPassword","newPassword","Pagination","portionNumber","setPortionNumber","pageCount","Math","ceil","cardPacksTotalCount","portionSize","sizePage","i","push","portionCount","leftPortion","rightPortion","filteredPage","filter","p","pagination","map","onPageChanged","key","page","cardsAPI","packId","get","question","answer","card","cardsPack_id","grade","card_id","packsAPI","search","packName","cardsPack","packs","getPacks","getState","setTotalPage","cardPacks","settings","total","cards","setCardsSuccess","getCardThunk","cardsTotalCount","Modal","closeModal","show","closeHandler","modalOverlay","modal","modalClose","FormCardModal","setQuestion","setAnswer","closeModalHandler","setOpenModal","openModal","e","currentTarget","display","flexDirection","margin","trim","addItem","SingleCard","oneCard","items","front","side","content","back","LearnPage","onClose","currentCard","setCurrentCard","getCard","sentGrade","grades","sendGrade","g","sum","reduce","acc","rand","random","res","newSum","Cards","modalCreate","setModalCreate","modalUpdate","setModalUpdate","showLearn","setShowLearn","currentId","setCurrentId","setPage","deleteCardHandler","cardId","deleteCard","overlay","marginLeft","addCard","updateCard","c","more_id","created","Profile","logout","showSetting","overlayProfile","Search","setValue","onKeyPress","charCode","FormModal","add","CardPack","changeModal","setChangeModal","cardsCount","updatePack","CardPacks","searchInput","setSearch","pack","Date","getTime","num","createPack","SettingProfile","onShow","setAvatar","wrapper","image","form","undefined","defaultValue","file","files","reader","FileReader","readAsDataURL","onload","updatedUser","changeProfile","ProfileContainer","showModal","setShowModal","Routes","render","ErrorBar","errorMessage","App","Boolean","window","location","hostname","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.165b0b6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Card_page__3ae5L\",\"container\":\"Card_container__2DtDv\",\"items\":\"Card_items__LvJp8\",\"side\":\"Card_side__2pewO\",\"content\":\"Card_content__2sMx8\",\"front\":\"Card_front__13cpF\",\"back\":\"Card_back__1uK38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2QrRn\",\"container\":\"Header_container__2mkAL\",\"link\":\"Header_link__1xH-x\",\"active\":\"Header_active__BDwnA\",\"logout\":\"Header_logout__23tRj\",\"user\":\"Header_user__1AzpF\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.2da04171.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1bEls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simpleButton\":\"Button_simpleButton__36xfw\",\"btnDisabled\":\"Button_btnDisabled__20iz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SettingProfile_wrapper__1ihHJ\",\"image\":\"SettingProfile_image__3nA95\",\"form\":\"SettingProfile_form__2YLgV\",\"input\":\"SettingProfile_input__3LKaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"Modal_modalOverlay__1DUub\",\"modal\":\"Modal_modal__I_ohH\",\"modalClose\":\"Modal_modalClose__2l1ST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"Preloader_load__2RX1K\",\"loading\":\"Preloader_loading__3XAhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayProfile\":\"Profile_overlayProfile__3tOow\",\"profile\":\"Profile_profile__1kmVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Packs_page__OrCyS\",\"overlay\":\"Packs_overlay__t2AUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorBar_wrapper__77sIl\",\"errorMessage\":\"ErrorBar_errorMessage__3tTMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__1Y_lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Login_text__q1GFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2L43h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LearnPage_page__qx9pU\"};","import {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\nimport style from './Link.module.scss'\r\n\r\nexport const Link: React.FC<PropsType> = (props) => {\r\n    const {path, title} = props\r\n    return (\r\n        <NavLink to={path} className={style.link}>{title}</NavLink>\r\n    )\r\n}\r\ntype PropsType = {\r\n    path: string\r\n    title?: string | null\r\n}\r\n","import React from 'react'\r\nimport style from './Preloader.module.scss'\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={style.load}>\r\n            <div className={style.loading}>Loading</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport style from './Header.module.scss'\r\nimport ava from '../assets/avatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {Link} from '../components/helpComponent/Link'\r\nimport {Preloader} from '../components/helpComponent/Preloader'\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    profile: {\r\n        name: string | null\r\n        id: string | null\r\n        avatar: string | null\r\n    }\r\n    isLoading: boolean\r\n}\r\n\r\n\r\nexport const Header = (props: PropsType) => {\r\n    const {name, avatar} = props.profile\r\n    const userPhoto = avatar ? avatar : ava\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.container}>\r\n                <div style={{color:'white'}}>LOGO</div>\r\n                <div className={style.navBar}>\r\n                    {!props.isAuth && <>\r\n                        <NavLink to={'/forgot'} className={style.link} activeClassName={style.active}>forgot</NavLink>\r\n                        <NavLink to={'/login'} className={style.link} activeClassName={style.active}>login</NavLink>\r\n                    </>}\r\n                </div>\r\n                {props.isAuth && <div className={style.user}>\r\n                    <img src={userPhoto} alt=\"avatar\"/>\r\n                    <Link path={'/profile'} title={name}/>\r\n                </div>}\r\n            </div>\r\n            {props.isLoading &&  <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport style from './Input.module.scss'\r\n\r\ntype InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\nexport function Input(props: InputPropsType) {\r\n    return (\r\n        <>{props.type === 'checkbox' ?\r\n            <label className={style.checkbox}>\r\n                <input className={props.type === 'checkbox' ? style.checkbox : style.input}{...props}/>\r\n                {props.placeholder}\r\n            </label> :\r\n            <input className={props.type === 'checkbox' ? style.checkbox : style.input}{...props}/>}\r\n        </>\r\n    );\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport style from './Button.module.scss'\r\n\r\ntype PropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nexport const Button: React.FC<PropsType> = (props) => {\r\n    const {name, disabled, children} = props\r\n    return <button {...props}\r\n                   className={props.disabled ? `${style.btnDisabled} ${style.simpleButton}` : style.simpleButton}\r\n                   disabled={disabled}>{name ? name : children}</button>\r\n}\r\n\r\nexport const ButtonFile:React.FC<PropsType> = (props) => {\r\n    const {children} = props\r\n    return <label className={style.simpleButton}>\r\n        upload file\r\n        {children}\r\n    </label>\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0'\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true\r\n});\r\n","import {instance} from '../../../../dal/api'\r\n\r\n\r\nexport const loginAPI = {\r\n    async signIn(email: string, password: string, rememberMe: boolean) {\r\n        const result = await instance.post('/auth/login', {email, password, rememberMe})\r\n        return result.data\r\n    },\r\n    async authMe() {\r\n        const result = await instance.post('/auth/me')\r\n        return result.data\r\n    },\r\n    async refreshProfile(name: string, img='') {\r\n        const avatar = img ? img : ''\r\n        const result = await instance.put('/auth/me', {name, avatar })\r\n        return result.data\r\n    },\r\n    async signOut() {\r\n        await instance.delete('/auth/me')\r\n\r\n    }\r\n}\r\n","import {authMe} from '../Login/bll/loginReducer'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\n\r\nconst initialState = {\r\n    initialApp: false,\r\n    isLoading: false,\r\n    error: null as string | null\r\n}\r\nexport const appReducer = (state: InitialState = initialState, action: Actions) => {\r\n    switch (action.type) {\r\n        case 'INITIAL/APP/REDUCER':\r\n        case 'PAYLOAD/APP/REDUCER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const payload = (isLoading: boolean, error: string | null) => {\r\n    return {type: 'PAYLOAD/APP/REDUCER', payload: {isLoading, error}} as const\r\n}\r\nexport const initialApp = (initialApp: boolean) => {\r\n    return {type: 'INITIAL/APP/REDUCER', payload: {initialApp}} as const\r\n}\r\nexport const initApp = ():ThunkAction =>async (dispatch) => {\r\n    await dispatch(authMe())\r\n    dispatch(initialApp(true))\r\n}\r\ntype InitialState = typeof initialState\r\nexport type AppPayloadType = ReturnType<typeof payload>\r\ntype ThunkAction = ThunkActionType<Actions>\r\ntype Actions = AppPayloadType | ReturnType<typeof initialApp>\r\n","import {InferActionTypes, ThunkActionType} from '../../../../entites/entites'\r\nimport {loginAPI} from '../api/loginAPI'\r\nimport {Dispatch} from 'redux'\r\nimport {AppPayloadType, payload} from '../../InitialApp/appReducer'\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    profile: {\r\n        name: null as string | null,\r\n        id: null as string | null,\r\n        avatar: null as string | null\r\n    },\r\n    success: false\r\n}\r\n\r\nexport const loginReducer = (state: LoginType = initialState, action: LoginActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_PROFILE/REDUCER':\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    name: action.name,\r\n                    id: action.id,\r\n                    avatar: action.avatar\r\n                }\r\n            }\r\n        case 'AUTH_ME/LOGIN/REDUCER':\r\n            return {\r\n                ...state,\r\n                isAuth: action.auth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// action creator\r\nconst actions = {\r\n    setAthMe: (auth: boolean) => ({type: 'AUTH_ME/LOGIN/REDUCER', auth} as const),\r\n    setProfile: (name: string | null, id: string | null, avatar: string | null) =>\r\n        ({type: 'SET_PROFILE/REDUCER', name, id, avatar} as const)\r\n}\r\n\r\n\r\n//thunk\r\nexport const signIn = (email: string, password: string, rememberMe = false): LoginThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        try {\r\n            await loginAPI.signIn(email, password, rememberMe)\r\n            dispatch(payload(false, null))\r\n            await dispatch(authMe())\r\n        } catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(payload(false, err))\r\n        }\r\n    }\r\n}\r\nexport const authMe = (): LoginThunkType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await loginAPI.authMe()\r\n        const {name, _id, avatar} = data\r\n        dispatch(actions.setAthMe(true))\r\n        dispatch(payload(false, null))\r\n        dispatch(actions.setProfile(name, _id, avatar))\r\n\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    await loginAPI.signOut()\r\n    dispatch(actions.setProfile(null, null, null))\r\n    dispatch(actions.setAthMe(false))\r\n}\r\nexport const changeProfile = (value: string, image= '') => async (dispatch:Dispatch) => {\r\n   const result =  await loginAPI.refreshProfile(value, image)\r\n    const {name, _id, avatar} = result.updatedUser\r\n    dispatch(actions.setProfile(name, _id, avatar))\r\n}\r\n\r\n\r\n//type\r\ntype LoginType = typeof initialState\r\ntype LoginActionsType = InferActionTypes<typeof actions>\r\ntype LoginThunkType = ThunkActionType<LoginActionsType | AppPayloadType>\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {signIn} from '../bll/loginReducer'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {AppStateType} from '../../../../bll/store'\r\n\r\nimport style from './Login.module.scss'\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>('test@email.nya')\r\n    const [pass, setPass] = useState<string>('test@email.nya123')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(true)\r\n    const {isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n    const dispatch = useDispatch()\r\n\r\n    const changeEmailHandler = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\r\n    const changePassHandler = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\r\n    const changeRememberHandler = (event: ChangeEvent<HTMLInputElement>) => setRememberMe(event.target.checked)\r\n    const onSendHandler = () => dispatch(signIn(email, pass, rememberMe))\r\n\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    const styleLogin = {\r\n        width: '200px',\r\n        marginTop: '10px',\r\n        letterSpacing: '10px'\r\n    }\r\n    return (\r\n        <div className={'page-form'}>\r\n            <h2>Login</h2>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Input placeholder={'password'} type={'password'} onChange={changePassHandler} value={pass}/>\r\n            <Input placeholder={'remember me'} type={'checkbox'} onChange={changeRememberHandler} checked={rememberMe}/>\r\n            <p className={style.text}>forgot password or email <NavLink to={'/forgot'}>forgot</NavLink></p>\r\n            <NavLink to={'/registration'}>registration</NavLink>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={isLoading} style={styleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n","import {instance} from '../../../../dal/api'\r\n\r\nexport const regAPI  = {\r\n    async register(email: string, password: string) {\r\n        const result = await instance.post('/auth/register', {email, password})\r\n        return  result.data\r\n    }\r\n}\r\n","import {ThunkActionType} from '../../../../entites/entites';\r\nimport {regAPI} from '../api/regAPI';\r\nimport {AppPayloadType, payload} from '../../InitialApp/appReducer';\r\n\r\nconst initialState = {\r\n    success: false\r\n}\r\n\r\n\r\nexport const registerReducer = (state: InitialState = initialState, action: RegisterActionsType) => {\r\n    switch (action.type) {\r\n        case 'PAYLOAD/REGISTER/REDUCER':\r\n            return {\r\n                ...state, success: action.success\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creator\r\nexport const setSuccess = (success: boolean) => ({type: 'PAYLOAD/REGISTER/REDUCER', success} as const)\r\n//thunk\r\nexport const registerThunk = (email: string, password: string, confirmedPassword: string): ThunkRegisterType => {\r\n    return async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        if (password !== confirmedPassword)\r\n            dispatch(payload(false, 'Password is not match'))\r\n        else if (email === '' || password === '' || confirmedPassword === '')\r\n            dispatch(payload(false, 'All field is required!'))\r\n        else if (password.length <= 7 || confirmedPassword.length <= 7)\r\n            dispatch(payload(false, 'password must be more than 7 char!'))\r\n        else if (!email.match(/^[\\w][\\w-.]*@[\\w-]+\\.[a-z]{2,7}$/i))\r\n            dispatch(payload(false, 'Email is not valid!'))\r\n        else {\r\n            try {\r\n                await regAPI.register(email, password)\r\n                dispatch(setSuccess(true))\r\n                dispatch(payload(false, null))\r\n\r\n            } catch (e) {\r\n                dispatch(payload(false, e.response.data.error))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//type\r\ntype InitialState = typeof initialState\r\ntype ThunkRegisterType = ThunkActionType<RegisterActionsType | AppPayloadType>\r\ntype RegisterActionsType = ReturnType<typeof setSuccess>\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {registerThunk, setSuccess} from '../bll/registerReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Preloader} from '../../../../components/helpComponent/Preloader'\r\n\r\nexport const RegisterForm = React.memo(() => {\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const dispatch = useDispatch()\r\n    const {success} = useSelector((state: AppStateType) => state.register)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n\r\n    const changeEmailHandler = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\r\n    const changePassHandler = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\r\n    const changeConfirmHandler = (event: ChangeEvent<HTMLInputElement>) => setConfirm(event.target.value)\r\n    const onSendHandler = () => dispatch(registerThunk(email, pass, confirm))\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSuccess(false))\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (success) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={'page-form'}>\r\n            <h2>Register</h2>\r\n            <div>{isLoading && <Preloader/>}</div>\r\n            <br/>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Input placeholder={'password'} type={'password'} onChange={changePassHandler} value={pass}/>\r\n            <Input placeholder={'confirm password'} type={'password'} onChange={changeConfirmHandler} value={confirm}/>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={isLoading}/>\r\n        </div>\r\n    )\r\n})\r\n","import {instance} from '../../../../dal/api'\r\n\r\nexport const recoveryAPI = {\r\n    async sendRequest(email: string, html1: string, html2: string) {\r\n        const result = await instance.post('/auth/forgot', {email, html1, html2})\r\n        return result.data\r\n    },\r\n    async newPassword(token: string, password: string) {\r\n        const result = await instance.post('/auth/set-new-password', {token, password})\r\n        return result.data\r\n    }\r\n}\r\n","import {InferActionTypes} from '../../../../entites/entites'\r\nimport {Dispatch} from 'redux';\r\nimport {recoveryAPI} from '../api/recoveryAPI';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false\r\n}\r\ntype RecoveryType = typeof initialState\r\ntype RecoveryActions = InferActionTypes<typeof actions>\r\nexport const recoveryReducer = (state:RecoveryType = initialState, action: RecoveryActions) => {\r\n    switch (action.type) {\r\n        case 'RECOVERY/REDUCER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    recoveryPayload: (loading: boolean, error: string, success: boolean) =>({type: 'RECOVERY/REDUCER', payload: {\r\n            loading, error, success\r\n        }})\r\n}\r\n\r\nexport const recoveryThunk = (email: string) => {\r\n    return async (dispatch: Dispatch<RecoveryActions>) => {\r\n        dispatch(actions.recoveryPayload(true, '', false))\r\n        try {\r\n            const html1 = \"<a href='http://localhost:3000/reset-password/\"\r\n            const html2 = \">reset-password-link</a>\"\r\n            const data = await recoveryAPI.sendRequest(email, html1, html2)\r\n            dispatch(actions.recoveryPayload(false, '', data.success))\r\n        }\r\n        catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(actions.recoveryPayload(false, err, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const newPassword = (token: string, password: string) => {\r\n    return async (dispatch: Dispatch<RecoveryActions>) => {\r\n        dispatch(actions.recoveryPayload(true, '', false))\r\n        try {\r\n            let result = await recoveryAPI.newPassword(token, password)\r\n            dispatch(actions.recoveryPayload(false, '', result.success))\r\n        }\r\n        catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(actions.recoveryPayload(false, err, false))\r\n        }\r\n\r\n\r\n    }\r\n}\r\n","import {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport React, {useCallback, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {recoveryThunk} from '../bll/recoveryReducer';\r\n\r\n\r\nexport const Forgot = React.memo( () => {\r\n    const {loading, success, error} =  useSelector((state: AppStateType) => state.recovery )\r\n    const [email, setEmail] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const changeEmailHandler = useCallback( (event) => {\r\n        setEmail(event.target.value)\r\n    },[setEmail])\r\n\r\n    const onSendHandler = useCallback( () => {\r\n        dispatch(recoveryThunk(email))\r\n    }, [dispatch, email])\r\n    return(\r\n        <div className={'page-form'}>\r\n            <h2>forgot password</h2>\r\n            {loading && <span style={{fontWeight: 'bold'}}>loading</span>}\r\n            {error && <span style={{color: 'red'}}>{error}</span>}\r\n            {success && <span style={{fontWeight: 'bold'}}>message send to email</span>}\r\n            <br/>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={loading}/>\r\n        </div>\r\n    )\r\n})\r\n","import {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport React, {useCallback, useState} from 'react'\r\nimport { useParams, RouteComponentProps, Redirect } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../bll/store';\r\nimport { newPassword } from '../bll/recoveryReducer';\r\n\r\n\r\nexport const NewPassword = React.memo( (props: RouteComponentProps) => {\r\n    const {loading, error, success} = useSelector( (state: AppStateType) => state.recovery)\r\n    const [password, setPassword] = useState('')\r\n    const {token} =  useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const setNewPassword = useCallback( (event) => {\r\n        setPassword(event.target.value)\r\n    }, [setPassword])\r\n    const sendHandler = () => {\r\n        dispatch(newPassword(token, password))\r\n    }\r\n    if(success) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n    return(\r\n        <div className={'page-form'}>\r\n            <h3>new password</h3>\r\n            {loading && <span style={{fontWeight: 'bold'}}>loading</span>}\r\n            {error && <span style={{color: 'red'}}>{error}</span>}\r\n            <Input placeholder={'new password'} type={'password'} value={password} onChange={setNewPassword}/>\r\n            <Button name={'send'} disabled={loading} onClick={sendHandler}/>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useState} from 'react'\r\nimport style from './Pagination.module.scss'\r\ntype PaginationType = {\r\n    cardPacksTotalCount: number\r\n    page: number\r\n    onPageChanged: (number: number) => void\r\n    portionSize: number\r\n\r\n}\r\nexport const Pagination = (props: PaginationType) => {\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    // pageCount сколько всего страничек\r\n    let pageCount = Math.ceil(props.cardPacksTotalCount / props.portionSize)\r\n    let sizePage = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        sizePage.push(i)\r\n    }\r\n\r\n    // portionCount количество порций\r\n    const portionCount = Math.ceil(pageCount / props.portionSize)\r\n\r\n    const leftPortion = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortion = portionNumber * props.portionSize\r\n    const filteredPage = sizePage.filter(p => p >= leftPortion && p <= rightPortion)\r\n    return (\r\n        <div className={style.pagination}>{portionNumber > 1 && <span onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}> <button>{'<'}</button> </span>}\r\n            {filteredPage.map(p => {\r\n                return <span onClick={() => props.onPageChanged(p)} key={p}>{p === props.page ? <b>{p}</b> : p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <span onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}> <span>{'>'}</span> </span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import {instance} from '../../../dal/api'\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    _id: string\r\n}\r\nexport type ResponseCardType = {\r\n    cards: Array<CardType>\r\n    error: string\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: string\r\n}\r\nexport const cardsAPI = {\r\n    async getCards(packId: string, page = 1) {\r\n        const id =  `?cardsPack_id=${packId}`\r\n        const result = await instance\r\n            .get<ResponseCardType>(`/cards/card${id}&page=${page}&pageCount=6`)\r\n        return result.data\r\n    },\r\n    async createCard(id: string, question: string, answer = '') {\r\n        const result = await instance.post('/cards/card', {\r\n            card: {\r\n                cardsPack_id: id,\r\n                question,\r\n                answer,\r\n            }\r\n        })\r\n        return result.data\r\n    },\r\n    async deleteCard(id:string) {\r\n        const result = await instance.delete(`/cards/card?id=${id}`)\r\n        return result.data\r\n    },\r\n    async updateCard(id:string, question: string, answer = '') {\r\n        const result = await instance.put('/cards/card',{\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n            }\r\n\r\n        })\r\n        return result.data\r\n    },\r\n    async grateCard(id: string, grade: number) {\r\n       await instance.put(`/cards/grade`, {card_id: id, grade})\r\n    }\r\n}\r\n","import {instance} from '../../../dal/api'\r\n\r\nexport type CardPack = {\r\n    cardsCount: number\r\n    grade: number\r\n    name: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\nexport type PacksType = {\r\n    cardPacks: Array<CardPack>\r\n    cardPacksTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    error?: string\r\n}\r\ntype DataType = {\r\n    success: boolean\r\n    token: string\r\n    error?: string\r\n}\r\nexport const packsAPI = {\r\n    async getPacks(search: string, page = 1) {\r\n        const packName = search ? `&packName=${search}`: ''\r\n        const result = await instance\r\n            .get<PacksType>(`/cards/pack?page=${page}${packName}&pageCount=6`)\r\n        return result.data\r\n    },\r\n    async createPack(value: string) {\r\n        const result = await instance.post<DataType>('/cards/pack', {\r\n            cardsPack: {\r\n                name: value\r\n            }\r\n        })\r\n        return result.data\r\n    },\r\n    async deletePack(id:string) {\r\n        const result = await instance.delete<DataType>(`/cards/pack?id=${id}`)\r\n        return result.data\r\n    },\r\n    async updatePack(id:string, value: string) {\r\n    const result = await instance.put<DataType>('/cards/pack',{\r\n        cardsPack: {\r\n            _id: id,\r\n            name: value\r\n        }\r\n    })\r\n        return result.data\r\n    }\r\n}\r\n","import {CardPack, packsAPI} from '../api/packsAPI'\r\nimport {InferActionTypes, ThunkActionType} from '../../../entites/entites'\r\nimport {setTotalPage} from '../../Search/bll/searchReducer'\r\nimport {AppPayloadType, payload} from '../../01-auth/InitialApp/appReducer'\r\n\r\nconst initialState = {\r\n    packs: [] as Array<CardPack>,\r\n}\r\nexport const packsReducer = (state:InitialState = initialState, action: PacksActionsType) => {\r\n    switch (action.type) {\r\n        case 'PACKS_REDUCER/SET_PACKS':\r\n            return {...state, packs: [...action.packs]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setPacksSuccess: (packs: Array<CardPack>) => ({type: 'PACKS_REDUCER/SET_PACKS', packs} as const)\r\n}\r\n\r\nexport const getPacks = (search = '', page = 1): ThunkPacksType => async (dispatch, getState) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await packsAPI.getPacks(search, page)\r\n        dispatch(setTotalPage(data.cardPacksTotalCount, page))\r\n        dispatch(actions.setPacksSuccess(data.cardPacks))\r\n        dispatch(payload(false, null))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const createPack = (value: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.createPack(value)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch\r\n        (e) {\r\n        dispatch(payload(true, e.response.data.error))\r\n    }\r\n}\r\nexport const updatePack = (id: string, value: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.updatePack(id, value)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const deletePack = (id: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.deletePack(id)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\ntype InitialState = typeof initialState\r\ntype ThunkPacksType = ThunkActionType<PacksActionsType | AppPayloadType>\r\ntype PacksActionsType = InferActionTypes<typeof actions>\r\n","import {InferActionTypes, ThunkActionType} from '../../../entites/entites'\r\nimport {getPacks} from '../../Packs/bll/packsReducer'\r\n\r\nconst initialState = {\r\n    settings: {\r\n        search: '',\r\n        page:1,\r\n        total: 10\r\n    }\r\n}\r\n\r\nexport const searchReducer = (state:InitialStateType = initialState, action: ActionsSearchType) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_REDUCER/SET_SEARCH':\r\n        case 'SEARCH_REDUCER/SET_CURRENT_PAGE':\r\n        case 'SEARCH_REDUCER/SET_TOTAL_COUNT':return {\r\n            ...state,\r\n            settings: {...state.settings, ...action.payload}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n// action creator\r\nexport const actions = {\r\n    setSearch: (search: string) => ({type:'SEARCH_REDUCER/SET_SEARCH', payload: {search}} as const),\r\n    setCurrentPage: (page: number) => ({type:'SEARCH_REDUCER/SET_CURRENT_PAGE', payload:{page} } as const),\r\n    setTotalCount: (total: number) => ({type:'SEARCH_REDUCER/SET_TOTAL_COUNT', payload:{total} } as const)\r\n}\r\n\r\n// thunk\r\nexport const setTotalPage = (total: number, page: number):ThunkSearchType =>(dispatch) => {\r\n    dispatch(actions.setTotalCount(total))\r\n    dispatch(actions.setCurrentPage(page))\r\n}\r\nexport const setSearch = (value: string):ThunkSearchType => async (dispatch) => {\r\n    dispatch(actions.setSearch(value))\r\n    dispatch(getPacks(value))\r\n}\r\nexport const setPage = (num: number):ThunkSearchType => async (dispatch, getState) => {\r\n    dispatch(actions.setCurrentPage(num))\r\n}\r\n\r\n// type\r\ntype InitialStateType = typeof initialState\r\ntype ActionsSearchType = InferActionTypes<typeof actions>\r\ntype ThunkSearchType = ThunkActionType<ActionsSearchType>\r\n","import {cardsAPI, CardType} from '../api/cardsAPI'\r\nimport {setTotalPage} from '../../Search/bll/searchReducer'\r\nimport {AppPayloadType, payload} from '../../01-auth/InitialApp/appReducer'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n}\r\ntype InitialState = typeof initialState\r\nexport const cardsReducer = (state: InitialState = initialState, action: ActionCardsReducerType) => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS/CARDS_REDUCER':\r\n            return {...state, cards: [...action.cards]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCardsSuccess = (cards: Array<CardType>) => ({type: 'SET_CARDS/CARDS_REDUCER', cards} as const)\r\n\r\nexport const getCardThunk = (packId: string, page = 1): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await cardsAPI.getCards(packId, page)\r\n        dispatch(payload(false, null))\r\n        dispatch(setTotalPage(data.cardsTotalCount, page))\r\n        dispatch(setCardsSuccess(data.cards))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const addCard = (packId: string, question: string, answer: string): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await cardsAPI.createCard(packId, question, answer)\r\n        dispatch(payload(false, null))\r\n        dispatch(getCardThunk(packId))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const deleteCard = (cardId: string, packId: string): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await cardsAPI.deleteCard(cardId)\r\n        dispatch(payload(false, null))\r\n        dispatch(getCardThunk(packId))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const updateCard = (cardId: string, packId: string, question: string, answer: string): ThunkCardsType =>\r\n    async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        try {\r\n            await cardsAPI.updateCard(cardId, question, answer)\r\n            dispatch(payload(false, null))\r\n            dispatch(getCardThunk(packId))\r\n        } catch (e) {\r\n            dispatch(payload(false, e.response.data.error))\r\n        }\r\n    }\r\nexport const sendGrade = (id: string, grades: number): ThunkCardsType => async (dispatch) => {\r\n    await cardsAPI.grateCard(id, grades)\r\n}\r\ntype ActionCardsReducerType = ReturnType<typeof setCardsSuccess>\r\ntype ThunkCardsType = ThunkActionType<ActionCardsReducerType | AppPayloadType>\r\n","import React from 'react'\r\nimport style from './Modal.module.scss'\r\n\r\n\r\nexport const Modal: React.FC<ModalType> = ({children, closeModal, show, width}) => {\r\n    const closeHandler = (event: React.KeyboardEvent & React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        // if (event.target === overlayRef.current) closeModal()\r\n        closeModal()\r\n    }\r\n    if (!show) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <div className={style.modalOverlay} onClick={closeHandler} />\r\n            <div className={style.modal} style={{width}}>\r\n                <div className={style.modalClose} onClick={closeHandler}>&times;</div>\r\n                {children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\ntype ModalType = {\r\n    show: boolean\r\n    closeModal: () => void\r\n    width?: string\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input} from './Input'\r\nimport {Button} from './Button'\r\nimport {Modal} from '../../fatures/Modal/Modal'\r\n\r\n\r\nexport const FormCardModal: React.FC<PropsType> = (props) => {\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const closeModalHandler = () => {\r\n        props.setOpenModal(!props.openModal)\r\n        setQuestion('')\r\n        setAnswer('')\r\n    }\r\n    const addItemHandler = () => {\r\n        question.trim() && props.addItem(question, answer)\r\n        closeModalHandler()\r\n    }\r\n    return (\r\n        <Modal show={props.openModal} closeModal={closeModalHandler}>\r\n            <div>\r\n                <h2>{props.title} :</h2>\r\n                <Input value={question} onChange={(e) => setQuestion(e.currentTarget.value)}/>\r\n                <Input value={answer} onChange={(e) => setAnswer(e.currentTarget.value)}/>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <Button name={'send'} style={{margin: '5px'}} onClick={addItemHandler}/>\r\n                <Button name={'back'} style={{margin: '5px'}} onClick={closeModalHandler}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    openModal: boolean\r\n    setOpenModal: (open: boolean) => void\r\n    addItem: (question: string, answer: string) => void\r\n    title: string\r\n}\r\n","import React from 'react'\r\nimport style from './Card.module.scss'\r\nimport {CardType} from '../api/cardsAPI'\r\n\r\ntype PropsType = {\r\n    oneCard: CardType\r\n}\r\nexport const SingleCard:React.FC<PropsType> = (props) => {\r\n    let {oneCard} = props\r\n    if(!oneCard) {\r\n        return  <div>no cards yet</div>\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.items}>\r\n                <div className={`${style.front}  ${style.side}`}>\r\n                    <div className={style.content}>\r\n                        <h1>question</h1>\r\n                        <p>{oneCard.question}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={`${style.back} ${style.side}`}>\r\n                    <div className={style.content}>\r\n                        <h1>answer</h1>\r\n                        <p>{oneCard.answer}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {CardType} from '../../Cards/api/cardsAPI'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {SingleCard} from '../../Cards/ui/SingleCard'\r\nimport {Modal} from '../../Modal/Modal'\r\nimport style from './LearnPage.module.scss'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {sendGrade} from '../../Cards/bll/cardsReducer'\r\n\r\n\r\nexport const LearnPage: React.FC<PropsType> = ({id, cards, show, onClose}) => {\r\n    const [currentCard, setCurrentCard] = useState<CardType>(cards[0])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (cards.length > 0) setCurrentCard(getCard(cards))\r\n    }, [dispatch, id, cards])\r\n    const onNext = () => setCurrentCard(getCard(cards))\r\n    const sentGrade = (grades: number) => dispatch(sendGrade(currentCard._id, grades))\r\n\r\n    return (\r\n        <Modal show={show} closeModal={onClose}>\r\n            <p>Learn page : </p>\r\n            <div className={style.page}>\r\n                <Button onClick={onNext} name={'next'} disabled={!currentCard}/>\r\n                <SingleCard oneCard={currentCard}/>\r\n            </div>\r\n            {currentCard && grades.map((g, i) => (\r\n                <button key={'grade-' + i} onClick={() => sentGrade(g)}>{g}</button>))}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst grades = [1, 2, 3, 4, 5]\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\r\n    const rand = Math.random() * sum\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1})\r\n    return cards[res.id + 1]\r\n}\r\ntype PropsType = {\r\n    id: string\r\n    cards: Array<CardType>\r\n    show: boolean\r\n    onClose: () => void\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {RouteComponentProps, useParams} from 'react-router-dom'\r\nimport {Pagination} from '../../Pagination/Pagination'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addCard, deleteCard, getCardThunk, updateCard} from '../bll/cardsReducer'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {FormCardModal} from '../../../components/helpComponent/FormCardsModal'\r\nimport {LearnPage} from '../../LearnPage/ui/LearnPage'\r\nimport style from './Card.module.scss'\r\n\r\n\r\nexport const Cards = React.memo((props: RouteComponentProps<any>) => {\r\n    const [modalCreate, setModalCreate] = useState(false)\r\n    const [modalUpdate, setModalUpdate] = useState(false)\r\n    const [showLearn, setShowLearn] = useState(false)\r\n    const [currentId, setCurrentId] = useState('')\r\n    const [page, setPage] = useState(1)\r\n    const {cards} = useSelector((state: AppStateType) => state.card)\r\n    const {settings} = useSelector((state: AppStateType) => state.search)\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardThunk(id, page))\r\n    }, [dispatch, page, id])\r\n\r\n    const createCardHandler = (question: string, answer: string) => dispatch(addCard(id, question, answer))\r\n    const deleteCardHandler = (cardId: string) => dispatch(deleteCard(cardId, id))\r\n    const updateHandler = (question: string, answer: string) => dispatch(updateCard(currentId, id, question, answer))\r\n\r\n    const openUpdateModal = (cardId: string) => {\r\n        setCurrentId(cardId)\r\n        setModalUpdate(true)\r\n    }\r\n\r\n    return (\r\n        <> <div className={style.page}>\r\n            <div className={style.overlay}>\r\n                <h3> Create card\r\n                    <Button name={'+'} onClick={() => setModalCreate(!modalCreate)}\r\n                            style={{display: 'inline-flex',marginLeft:'10px'}}/>\r\n                </h3>\r\n                <h3> Learn Page\r\n                    <Button name={'Learn Page'} onClick={() => setShowLearn(!showLearn)}\r\n                            style={{display: 'inline-flex',marginLeft:'10px'}}/>\r\n                </h3>\r\n                <FormCardModal openModal={modalCreate} setOpenModal={() => setModalCreate(!modalCreate)}\r\n                               addItem={createCardHandler} title={'Create card'}/>\r\n                <FormCardModal openModal={modalUpdate} setOpenModal={() => setModalUpdate(!modalUpdate)}\r\n                               addItem={updateHandler} title={'update card'}/>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td>Question</td>\r\n                        <td>Gade</td>\r\n                        <td>delete</td>\r\n                        <td>update</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {cards.map(c => {\r\n                        return <tr key={c.more_id + c.created} id={c._id}>\r\n                            <td>{c.question}</td>\r\n                            <td>{c.grade}</td>\r\n                            <td onClick={() => deleteCardHandler(c._id)}><span>delete</span></td>\r\n                            <td onClick={() => openUpdateModal(c._id)}><span>update</span></td>\r\n                        </tr>\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <LearnPage id={id} cards={cards} show={showLearn} onClose={() => setShowLearn(!showLearn)}/>\r\n            </div>\r\n            <Pagination cardPacksTotalCount={settings.total}\r\n                        page={settings.page} onPageChanged={setPage} portionSize={6}/>\r\n        </div>\r\n        </>\r\n    )\r\n})\r\n\r\n","import React from 'react'\r\nimport userPhoto from '../../../../assets/avatar.png'\r\nimport style from './Profile.module.scss'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\n\r\n\r\nexport const Profile = React.memo(({profile, logout, showSetting}: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={'page'}>\r\n            <div className={style.overlayProfile}>\r\n                <div className={style.profile}>\r\n                    <img src={profile.avatar ? profile.avatar : userPhoto} alt=\"user\"/>\r\n                </div>\r\n                <div>{profile.name}</div>\r\n                <Button name={'logout'} style={{marginTop: '30px'}} onClick={logout}/>\r\n                <Button name={'setting'} style={{marginTop: '0'}} onClick={showSetting}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\ntype ProfilePropsType = {\r\n    profile: {\r\n        name: string | null,\r\n        id: string | null,\r\n        avatar: string | null\r\n    }\r\n    logout: () => void\r\n    showSetting: () => void\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../components/helpComponent/Input'\r\nimport {Button} from '../../components/helpComponent/Button'\r\ntype PropsType = {\r\n    search: (value: string) => void\r\n}\r\nexport const Search = React.memo((props:PropsType) => {\r\n    const [value, setValue] = useState('')\r\n    const changeInput = (event: ChangeEvent<HTMLInputElement>) => setValue(event.target.value)\r\n    const searchHandler = () => props.search(value)\r\n    const onKeyHandler = (e: React.KeyboardEvent) => {\r\n        if(e.charCode === 13) props.search(value)\r\n    }\r\n    return(\r\n        <>\r\n            <Input placeholder={'search'} value={value} onChange={changeInput} onKeyPress={onKeyHandler}/>\r\n            <Button name={'search'} style={{display: 'inline-block'}} onClick={searchHandler}/>\r\n        </>\r\n    )\r\n})\r\n","import React, {useState} from 'react'\r\nimport {Input} from './Input'\r\nimport {Button} from './Button'\r\nimport {Modal} from '../../fatures/Modal/Modal'\r\n\r\n\r\nexport const FormModal: React.FC<PropsType> = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const closeModalHandler = () => {\r\n        props.setOpenModal(!props.openModal)\r\n        setValue('')\r\n    }\r\n    const addDeckHandler = () => {\r\n        value.trim() && props.add(value)\r\n        closeModalHandler()\r\n    }\r\n    return (\r\n        <Modal show={props.openModal} closeModal={closeModalHandler}>\r\n            <div>\r\n                <h2>{props.title} :</h2>\r\n                <Input value={value} onChange={(e) => setValue(e.currentTarget.value)}/>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <Button name={'send'} style={{margin: '5px'}} onClick={addDeckHandler}/>\r\n                <Button name={'back'} style={{margin: '5px'}} onClick={closeModalHandler}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    openModal: boolean\r\n    setOpenModal: (open: boolean) => void\r\n    add: (value: string) => void\r\n    title: string\r\n}\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deletePack, updatePack} from '../bll/packsReducer'\r\nimport {Link} from '../../../components/helpComponent/Link'\r\nimport {FormModal} from '../../../components/helpComponent/FormModal'\r\n\r\n\r\nexport const CardPack = React.memo((props: CardType) => {\r\n    const [changeModal, setChangeModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const openModal = () => setChangeModal(!changeModal)\r\n    const updateHandler = (value: string) => dispatch(updatePack(props.id, value))\r\n    const deleteHandler = () => dispatch(deletePack(props.id))\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td><Link path={'/cards/' + props.id} title={props.name}/></td>\r\n                <td>{props.grade}</td>\r\n                <td>{props.cardsCount}</td>\r\n                <td>\r\n                    <div className={'button'} onClick={deleteHandler}>delete</div>\r\n                    <div className={'button'} onClick={openModal}>change</div>\r\n                </td>\r\n            </tr>\r\n            <FormModal openModal={changeModal}\r\n                       setOpenModal={openModal}\r\n                       add={updateHandler} title={'new title pack'}/>\r\n        </>\r\n    )\r\n})\r\ntype CardType = {\r\n    id: string\r\n    name: string,\r\n    grade: number\r\n    cardsCount: number\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {createPack, getPacks} from '../bll/packsReducer'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport {Search} from '../../Search/Search'\r\nimport {CardPack} from './Pack'\r\nimport {setPage, setSearch} from '../../Search/bll/searchReducer'\r\nimport {Pagination} from '../../Pagination/Pagination'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {FormModal} from '../../../components/helpComponent/FormModal'\r\nimport {Redirect} from 'react-router-dom'\r\nimport style from './Packs.module.scss'\r\n\r\nexport const CardPacks = React.memo(() => {\r\n    const {packs} = useSelector((state: AppStateType) => state.packs)\r\n    const {settings} = useSelector((state: AppStateType) => state.search)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n    const {isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const [openModal, setOpenModal] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getPacks(settings.search, settings.page))\r\n    }, [dispatch, settings.page, settings.search])\r\n    const openAddDeck = () => setOpenModal(true)\r\n    const addDeck = (value: string) => dispatch(createPack(value))\r\n    const searchInput = useCallback((value: string) => dispatch(setSearch(value)), [dispatch])\r\n    const onChangePage = (num: number) => dispatch(setPage(num))\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={style.page}>\r\n            <h2>PACKS</h2>\r\n            <div>\r\n                <Search search={searchInput}/>\r\n                <Button onClick={openAddDeck} name={'ADD PACK'} disabled={isLoading}/>\r\n            </div>\r\n            <div className={style.overlay}>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td>name</td>\r\n                        <td>Grade</td>\r\n                        <td>cards total</td>\r\n                        <td>actions</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {packs.map(pack => <CardPack\r\n                        key={pack._id + new Date().getTime()} id={pack._id}\r\n                        name={pack.name} grade={pack.grade}\r\n                        cardsCount={pack.cardsCount}\r\n                    />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Pagination cardPacksTotalCount={settings.total} page={settings.page}\r\n                        onPageChanged={onChangePage} portionSize={20}/>\r\n            <FormModal openModal={openModal} setOpenModal={setOpenModal} add={addDeck} title={'add new decks'}/>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {Button, ButtonFile} from '../../../../components/helpComponent/Button'\r\nimport ava from '../../../../assets/avatar.png'\r\nimport style from './SettingProfile.module.scss'\r\nimport {Modal} from '../../../Modal/Modal'\r\nimport {changeProfile} from '../../Login/bll/loginReducer'\r\n\r\nexport const SettingProfile: React.FC<PropsType> = ({show, onShow}) => {\r\n    const {profile} = useSelector((state: AppStateType) => state.login)\r\n    const [value, setValue] = useState<string | null>(profile.name)\r\n    const [avatar, setAvatar] = useState<string | null>(profile.avatar)\r\n    const dispatch = useDispatch()\r\n    const submitHandler = () => {\r\n        if (avatar && value) dispatch(changeProfile(value, avatar))\r\n    }\r\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files && e.target.files[0]\r\n        const reader = new FileReader()\r\n        file && reader.readAsDataURL(file)\r\n        reader.onload = function () {\r\n            setAvatar(typeof reader.result === 'string' ? reader.result : null)\r\n        }\r\n    }\r\n    return (\r\n        <Modal width={'800px'} show={show} closeModal={onShow}>\r\n            <div className={style.wrapper}>\r\n                <div className={style.image}>\r\n                    <img src={avatar || ava} alt=\"\"/>\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.input}>\r\n                        <Input placeholder={'name'} value={value ? value : undefined}\r\n                               onChange={(e) => setValue(e.currentTarget.value)}/>\r\n                    </div>\r\n                    <ButtonFile>\r\n                        <Input type={'file'} defaultValue={''}\r\n                               onChange={changeHandler} style={{display: 'none'}}/>\r\n                    </ButtonFile>\r\n                    <Button onClick={submitHandler} style={{margin: '0'}}>sumbit</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    show: boolean\r\n    onShow: () => void\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Profile} from './Profile'\r\nimport {CardPacks} from '../../../Packs/ui/Packs'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {logout} from '../../Login/bll/loginReducer'\r\nimport {SettingProfile} from './SettingProfile'\r\n\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const {profile, isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const logoutHandler = () => dispatch(logout())\r\n    if(!isAuth){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={'wrapper'}>\r\n            <Profile profile={profile} logout={logoutHandler} showSetting={() => setShowModal(true)}/>\r\n            <CardPacks/>\r\n            <SettingProfile show={showModal} onShow={() => setShowModal(!showModal)}/>\r\n        </div>\r\n    )\r\n}\r\n","import { Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport {Login} from '../fatures/01-auth/Login/ui/Login'\r\nimport {RegisterForm} from '../fatures/01-auth/Registration/ui/Register'\r\nimport {Forgot} from '../fatures/01-auth/Forgot/ui/Forgot'\r\nimport {NewPassword} from '../fatures/01-auth/Forgot/ui/NewPassword'\r\nimport {Cards} from '../fatures/Cards/ui/Cards'\r\nimport {ProfileContainer} from '../fatures/01-auth/Profile/ui/ProfileContainer';\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/login'} render={ () => <Login />}/>\r\n            <Route path={'/profile'} render={ () => <ProfileContainer />}/>\r\n            <Route path={'/cards/:id'} render={ (props) => <Cards {...props}/>}/>\r\n            <Route path={'/registration'} render={ () => <RegisterForm />}/>\r\n            <Route path={'/forgot'} render={ () => <Forgot />}/>\r\n            <Route path={'/reset-password/:token'} render={ (props) => <NewPassword {...props}/>} />\r\n            <Route path={'*'} render={ () => <div>not found</div>}/>\r\n        </Switch>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport style from './ErrorBar.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../bll/store'\r\nimport { payload } from '../../fatures/01-auth/InitialApp/appReducer'\r\nexport const ErrorBar = () => {\r\n    const {error} = useSelector( (state: AppStateType) => state.app)\r\n    const dispatch = useDispatch()\r\n    const closeHandler = () => {\r\n        dispatch(payload(false, null))\r\n    }\r\n    if(!error) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.errorMessage}>\r\n                <div>{error}</div>\r\n                <button onClick={closeHandler}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\nimport './App.scss'\nimport {Header} from './Header/Header'\nimport {Routes} from './Routes/Routes'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from './bll/store'\nimport {ErrorBar} from './components/helpComponent/ErrorBar'\nimport {initApp} from './fatures/01-auth/InitialApp/appReducer'\n\n\nconst App: React.FC = () => {\n    const {initialApp, isLoading} = useSelector((state: AppStateType) => state.app)\n    const {profile, isAuth} = useSelector((state: AppStateType) => state.login)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(initApp())\n    }, [dispatch])\n    if (!initialApp) return <div>....loading</div>\n\n    return (\n        <div className=\"App\">\n            <Header profile={profile} isAuth={isAuth} isLoading={isLoading}/>\n            <ErrorBar/>\n            <Routes/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {loginReducer} from '../fatures/01-auth/Login/bll/loginReducer'\r\nimport {registerReducer} from '../fatures/01-auth/Registration/bll/registerReducer'\r\nimport {recoveryReducer} from '../fatures/01-auth/Forgot/bll/recoveryReducer'\r\nimport {packsReducer} from '../fatures/Packs/bll/packsReducer'\r\nimport {cardsReducer} from '../fatures/Cards/bll/cardsReducer'\r\nimport {searchReducer} from '../fatures/Search/bll/searchReducer'\r\nimport {appReducer} from '../fatures/01-auth/InitialApp/appReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recovery: recoveryReducer,\r\n    packs: packsReducer,\r\n    card: cardsReducer,\r\n    search: searchReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {HashRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {store} from './bll/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}