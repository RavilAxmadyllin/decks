{"version":3,"sources":["fatures/Cards/ui/Card.module.scss","assets/avatar.png","fatures/Users/ui/Users.module.scss","components/helpComponent/Input.module.scss","Header/Header.module.scss","components/helpComponent/Button.module.scss","fatures/auth/Profile/ui/SettingProfile.module.scss","fatures/Users/ui/Chat.module.scss","fatures/Modal/Modal.module.scss","fatures/auth/Profile/ui/Profile.module.scss","components/helpComponent/Preloader.module.scss","fatures/Packs/ui/Packs.module.scss","components/helpComponent/ErrorBar.module.scss","components/helpComponent/Link.module.scss","fatures/auth/Login/ui/Login.module.scss","fatures/Pagination/Pagination.module.scss","components/helpComponent/Link.tsx","components/helpComponent/Input.tsx","components/helpComponent/Button.tsx","dal/api.ts","fatures/auth/Login/api/loginAPI.ts","fatures/auth/InitialApp/appReducer.ts","fatures/auth/Login/bll/loginReducer.ts","fatures/auth/Login/ui/Login.tsx","fatures/auth/Registration/api/regAPI.ts","fatures/auth/Registration/bll/registerReducer.ts","components/helpComponent/Preloader.tsx","fatures/auth/Registration/ui/Register.tsx","fatures/auth/Forgot/api/recoveryAPI.ts","fatures/auth/Forgot/bll/recoveryReducer.ts","fatures/auth/Forgot/ui/Forgot.tsx","fatures/auth/Forgot/ui/NewPassword.tsx","fatures/Pagination/Pagination.tsx","fatures/Cards/api/cardsAPI.ts","fatures/Packs/api/packsAPI.ts","fatures/Packs/bll/packsReducer.ts","fatures/Search/bll/searchReducer.ts","fatures/Cards/bll/cardsReducer.ts","fatures/Modal/Modal.tsx","components/helpComponent/FormCardsModal.tsx","fatures/Cards/ui/SingleCard.tsx","fatures/LearnPage/ui/LearnPage.tsx","fatures/Cards/ui/Cards.tsx","fatures/auth/Profile/ui/Profile.tsx","fatures/Search/Search.tsx","components/helpComponent/FormModal.tsx","fatures/Packs/ui/Pack.tsx","fatures/Packs/ui/Packs.tsx","fatures/auth/Profile/ui/SettingProfile.tsx","fatures/auth/Profile/ui/ProfileContainer.tsx","fatures/Users/dal/userAPI.ts","fatures/Users/bll/usersReducer.ts","fatures/Users/bll/chatReducer.ts","fatures/Users/ui/Chat.tsx","fatures/Users/ui/Users.tsx","fatures/Map.tsx","Routes/Routes.tsx","Header/Header.tsx","components/helpComponent/ErrorBar.tsx","App.tsx","serviceWorker.ts","bll/store.ts","index.tsx"],"names":["module","exports","Link","props","path","title","to","className","style","link","Input","type","checkbox","input","placeholder","Button","name","disabled","children","btnDisabled","simpleButton","ButtonFile","instance","axios","create","baseURL","withCredentials","loginAPI","email","password","rememberMe","post","result","data","img","avatar","put","delete","initialState","initialApp","isLoading","error","payload","isAuth","profile","id","success","actions","auth","authMe","dispatch","a","Cookies","set","token","_id","response","changeProfile","value","image","updatedUser","Login","useState","setEmail","pass","setPass","setRememberMe","useSelector","state","login","app","useDispatch","PATH_PROFILE","onChange","event","target","checked","text","PATH_REGISTRATION","onClick","err","signIn","width","marginTop","letterSpacing","regAPI","setSuccess","Preloader","load","loading","RegisterForm","React","memo","confirm","setConfirm","register","useEffect","confirmedPassword","length","match","registerThunk","recoveryAPI","html1","html2","Forgot","recovery","changeEmailHandler","useCallback","onSendHandler","toLowerCase","recoveryThunk","fontWeight","color","NewPassword","setPassword","useParams","setNewPassword","PATH_LOGIN","newPassword","Pagination","portionNumber","setPortionNumber","pageCount","Math","ceil","cardPacksTotalCount","portionSize","sizePage","i","push","portionCount","leftPortion","rightPortion","filteredPage","filter","p","pagination","map","onPageChanged","key","page","cardsAPI","packId","get","question","answer","card","cardsPack_id","grade","card_id","packsAPI","search","packName","cardsPack","packs","getPacks","getState","setTotalPage","cardPacks","settings","total","setPage","num","cards","setCardsSuccess","getCardThunk","cardsTotalCount","Modal","closeModal","show","closeHandler","modalOverlay","modal","modalClose","FormCardModal","setQuestion","setAnswer","closeModalHandler","setOpenModal","openModal","e","currentTarget","display","flexDirection","margin","trim","addItem","SingleCard","oneCard","container","items","front","side","content","back","LearnPage","onClose","currentCard","setCurrentCard","getCard","sentGrade","grades","sendGrade","g","marginRight","sum","reduce","acc","rand","random","res","newSum","Cards","modalCreate","setModalCreate","modalUpdate","setModalUpdate","showLearn","setShowLearn","currentId","setCurrentId","deleteCardHandler","cardId","deleteCard","overlay","marginLeft","addCard","updateCard","c","more_id","created","Profile","logout","showSetting","overlayProfile","src","userPhoto","alt","Search","setValue","onKeyPress","charCode","FormModal","add","CardPack","changeModal","setChangeModal","PATH_CARD","cardsCount","updatePack","CardPacks","searchInput","setSearch","pack","Date","getTime","createPack","SettingProfile","onShow","setAvatar","wrapper","ava","form","defaultValue","file","files","reader","FileReader","readAsDataURL","onload","ProfileContainer","showModal","setShowModal","inst","userAPI","message","users","messages","initialDialog","sendMessageSuccess","body","Chat","chat","generalChatMessages","chatBlock","reverse","m","user_name","newGeneralChatMessage","DialogItem","messageDate","updated","todayDate","diffDays","round","dialogItem","userPng","messageBody","Users","showUser","setShowUser","usersTotalCount","getUsers","userBlockRef","useRef","wrap","btn","usersBlock","ref","onScroll","scrollTop","clientHeight","scrollHeight","u","user","User","userItem","userDesc","publicCardPacksCount","DefMap","minHeight","justifyContent","alignItems","defaultState","center","zoom","controls","modules","height","console","log","geometry","Routes","render","Header","header","rightBlock","ErrorBar","errorMessage","App","Boolean","window","location","hostname","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,sBAAsB,MAAQ,oBAAoB,KAAO,qB,mBCDzMD,EAAOC,QAAU,IAA0B,oC,mBCC3CD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,IAAM,mBAAmB,WAAa,0BAA0B,SAAW,wBAAwB,OAAS,sBAAsB,SAAW,0B,mBCA/ND,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,0B,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,WAAa,2BAA2B,KAAO,uB,mBCAvID,EAAOC,QAAU,CAAC,aAAe,6BAA6B,YAAc,8B,mBCA5ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,MAAQ,8BAA8B,KAAO,6BAA6B,MAAQ,gC,mBCA9ID,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,WAAa,yBAAyB,YAAc,4B,mBCA1ID,EAAOC,QAAU,CAAC,aAAe,4BAA4B,MAAQ,qBAAqB,WAAa,4B,mBCAvGD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,eAAiB,gCAAgC,QAAU,2B,mBCA1GD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,QAAU,yB,mBCAvDD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,aAAe,iC,mBCArED,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,mBCAzBD,EAAOC,QAAU,CAAC,WAAa,iC,mOCGlBC,EAA4B,SAACC,GAAW,IAC1CC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACb,OACI,kBAAC,IAAD,CAASC,GAAIF,EAAMG,UAAWC,IAAMC,MAAOJ,I,+BCF5C,SAASK,EAAMP,GAClB,OACI,oCAAkB,aAAfA,EAAMQ,KACL,2BAAOJ,UAAWC,IAAMI,UACpB,yCAAOL,UAA0B,aAAfJ,EAAMQ,KAAsBH,IAAMI,SAAWJ,IAAMK,OAAUV,IAC9EA,EAAMW,aAEX,yCAAOP,UAA0B,aAAfJ,EAAMQ,KAAsBH,IAAMI,SAAWJ,IAAMK,OAAUV,K,qBCP9EY,EAA8B,SAACZ,GAAW,IAC5Ca,EAA4Bb,EAA5Ba,KAAMC,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,SACvB,OAAO,4CAAYf,EAAZ,CACQI,UAAWJ,EAAMc,SAAN,UAAoBT,IAAMW,YAA1B,YAAyCX,IAAMY,cAAiBZ,IAAMY,aACjFH,SAAUA,IAAWD,GAAcE,IAGzCG,EAAiC,SAAClB,GAAW,IAC/Ce,EAAYf,EAAZe,SACP,OAAO,2BAAOX,UAAWC,IAAMY,cAAxB,cAEFF,I,sDCbII,EAAWC,IAAMC,OAAO,CACjCC,QAFY,sCAGZC,iBAAiB,ICFRC,EAAW,SACPC,EAAeC,EAAkBC,GAAsB,OAAD,0HAC1CR,EAASS,KAAK,cAAe,CAACH,QAAOC,WAAUC,eADL,cACzDE,EADyD,yBAExDA,EAAOC,MAFiD,8CAD1DN,EAAW,WAKJ,OAAD,0HACUL,EAASS,KAAK,YADxB,cACLC,EADK,yBAEJA,EAAOC,MAFH,8CALNN,EAAW,SASCX,GAAuB,IAAD,wIAARkB,EAAQ,+BAAJ,GAC7BC,EAASD,GAAY,GADY,SAElBZ,EAASc,IAAI,WAAY,CAACpB,OAAMmB,WAFd,cAEjCH,EAFiC,yBAGhCA,EAAOC,MAHyB,8CATlCN,EAAW,WAcH,OAAD,oHACNL,EAASe,OAAO,YADV,8CCddC,EAAe,CACjBC,YAAY,EACZC,WAAW,EACXC,MAAO,MAgBEC,EAAU,SAACF,EAAoBC,GACxC,MAAO,CAAC9B,KAAM,sBAAuB+B,QAAS,CAACF,YAAWC,W,iBCjBxDH,EAAe,CACjBK,QAAQ,EACRC,QAAS,CACL5B,KAAM,KACN6B,GAAI,KACJV,OAAQ,MAEZW,SAAS,GAyBPC,EACQ,SAACC,GAAD,MAAoB,CAACrC,KAAM,wBAAyBqC,SAD5DD,EAEU,SAAC/B,EAAqB6B,EAAmBV,GAAzC,MACP,CAACxB,KAAM,sBAAuBK,OAAM6B,KAAIV,WAkBpCc,EAAS,yDAAsB,WAAOC,GAAP,qBAAAC,EAAA,6DACxCD,EAASR,GAAQ,EAAM,OADiB,kBAGjBf,IAHiB,OAG9BM,EAH8B,OAIpCmB,IAAQC,IAAI,QAASpB,EAAKqB,OACnBtC,EAAqBiB,EAArBjB,KAAMuC,EAAetB,EAAfsB,IAAKpB,EAAUF,EAAVE,OAClBe,EAASH,GAAiB,IAC1BG,EAASR,GAAQ,EAAO,OACxBQ,EAASH,EAAmB/B,EAAMuC,EAAKpB,IARH,kDAWpCe,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAXJ,0DAAtB,uDAmBTgB,EAAgB,SAACC,GAAD,IAAgBC,EAAhB,uDAAuB,GAAvB,8CAA8B,WAAOT,GAAP,uBAAAC,EAAA,sEAClCxB,EAAwB+B,EAAOC,GADG,OAClD3B,EADkD,SAE3BA,EAAO4B,YAA5B5C,EAFgD,EAEhDA,KAAMuC,EAF0C,EAE1CA,IAAKpB,EAFqC,EAErCA,OAClBe,EAASH,EAAmB/B,EAAMuC,EAAKpB,IAHgB,2CAA9B,uD,iBCnEhB0B,EAAQ,WAAO,IAAD,EACGC,mBAAiB,mBADpB,mBAChBlC,EADgB,KACTmC,EADS,OAECD,mBAAiB,sBAFlB,mBAEhBE,EAFgB,KAEVC,EAFU,OAGaH,oBAAkB,GAH/B,mBAGhBhC,EAHgB,KAGJoC,EAHI,KAIhBvB,EAAUwB,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAArD1B,OACAH,EAAa2B,aAAY,SAACC,GAAD,OAAyBA,EAAME,OAAxD9B,UACDU,EAAWqB,cAQjB,GAAI5B,EACA,OAAO,kBAAC,IAAD,CAAUrC,GAAIkE,KAOzB,OACI,yBAAKjE,UAAW,aACZ,qCACA,kBAACG,EAAD,CAAOI,YAAa,QAAS2D,SAjBV,SAACC,GAAD,OAA0CX,EAASW,EAAMC,OAAOjB,QAiBxBA,MAAO9B,IAClE,kBAAClB,EAAD,CAAOI,YAAa,WAAYH,KAAM,WAAY8D,SAjBhC,SAACC,GAAD,OAA0CT,EAAQS,EAAMC,OAAOjB,QAiBFA,MAAOM,IACtF,kBAACtD,EAAD,CAAOI,YAAa,cAAeH,KAAM,WAAY8D,SAjB/B,SAACC,GAAD,OAA0CR,EAAcQ,EAAMC,OAAOC,UAiBLA,QAAS9C,IAC/F,uBAAGvB,UAAWC,IAAMqE,MAApB,4BAAmD,kBAAC,IAAD,CAASvE,GAAI,WAAb,WACnD,kBAAC,IAAD,CAASA,GAAIwE,IAAb,gBACA,kBAAC,EAAD,CAAQ9D,KAAM,OAAQ+D,QAnBR,kBAAM7B,EDwBV,SAACtB,EAAeC,GAA0D,IAAxCC,EAAuC,wDAC3F,8CAAO,WAAOoB,GAAP,eAAAC,EAAA,6DACHD,EAASR,GAAQ,EAAM,OADpB,kBAGOf,EAAgBC,EAAOC,EAAUC,GAHxC,cAICoB,EAASR,GAAQ,EAAO,OAJzB,SAKOQ,EAASD,KALhB,uDAOO+B,EAAM,KAAExB,SAASvB,KAAKQ,MAC5BS,EAASR,GAAQ,EAAOsC,IARzB,yDAAP,sDCzBqCC,CAAOrD,EAAOoC,EAAMlC,KAmBHb,SAAUuB,EAAWhC,MAbxD,CACf0E,MAAO,QACPC,UAAW,OACXC,cAAe,YC7BVC,EAAU,SACJzD,EAAeC,GAAmB,OAAD,0HACvBP,EAASS,KAAK,iBAAkB,CAACH,QAAOC,aADjB,cACtCG,EADsC,yBAEpCA,EAAOC,MAF6B,8CCC9CK,EAAe,CACjBQ,SAAS,GAeAwC,EAAa,SAACxC,GAAD,MAAuB,CAACnC,KAAM,2BAA4BmC,Y,iBClBvEyC,EAAY,WACrB,OACI,yBAAKhF,UAAWC,IAAMgF,MAClB,yBAAKjF,UAAWC,IAAMiF,SAAtB,aCICC,GAAeC,IAAMC,MAAK,WAAO,IAAD,EACf9B,mBAAS,IADM,mBAClClC,EADkC,KAC3BmC,EAD2B,OAEjBD,mBAAS,IAFQ,mBAElCE,EAFkC,KAE5BC,EAF4B,OAGXH,mBAAS,IAHE,mBAGlC+B,EAHkC,KAGzBC,EAHyB,KAInC5C,EAAWqB,cACVzB,EAAWqB,aAAY,SAACC,GAAD,OAAyBA,EAAM2B,YAAtDjD,QACAN,EAAa2B,aAAY,SAACC,GAAD,OAAyBA,EAAME,OAAxD9B,UAaP,OANAwD,qBAAU,WACN,OAAO,WACH9C,EAASoC,GAAW,OAEzB,CAACpC,IAEAJ,EACO,kBAAC,IAAD,CAAUxC,GAAI,WAGrB,yBAAKC,UAAW,aACZ,wCACA,6BAAMiC,GAAa,kBAAC,EAAD,OACnB,6BACA,kBAAC9B,EAAD,CAAOI,YAAa,QAAS2D,SAnBV,SAACC,GAAD,OAA0CX,EAASW,EAAMC,OAAOjB,QAmBxBA,MAAO9B,IAClE,kBAAClB,EAAD,CAAOI,YAAa,WAAYH,KAAM,WAAY8D,SAnBhC,SAACC,GAAD,OAA0CT,EAAQS,EAAMC,OAAOjB,QAmBFA,MAAOM,IACtF,kBAACtD,EAAD,CAAOI,YAAa,mBAAoBH,KAAM,WAAY8D,SAnBrC,SAACC,GAAD,OAA0CoB,EAAWpB,EAAMC,OAAOjB,QAmBGA,MAAOmC,IACjG,kBAAC,EAAD,CAAQ7E,KAAM,OAAQ+D,QAnBR,kBAAM7B,EFEH,SAACtB,EAAeC,EAAkBoE,GAC3D,8CAAO,WAAO/C,GAAP,SAAAC,EAAA,yDACHD,EAASR,GAAQ,EAAM,OACnBb,IAAaoE,EAFd,gBAGC/C,EAASR,GAAQ,EAAO,0BAHzB,0BAIgB,KAAVd,GAA6B,KAAbC,GAAyC,KAAtBoE,EAJzC,gBAKC/C,EAASR,GAAQ,EAAO,2BALzB,4BAMMb,EAASqE,QAAU,GAAKD,EAAkBC,QAAU,GAN1D,iBAOChD,EAASR,GAAQ,EAAO,uCAPzB,2BAQOd,EAAMuE,MAAM,qCARnB,iBASCjD,EAASR,GAAQ,EAAO,wBATzB,mDAYW2C,EAAgBzD,EAAOC,GAZlC,QAaKqB,EAASoC,GAAW,IACpBpC,EAASR,GAAQ,EAAO,OAd7B,mDAiBKQ,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAjB7C,2DAAP,sDEHqC2D,CAAcxE,EAAOoC,EAAM6B,KAmBV5E,SAAUuB,QCrCvD6D,GAAc,SACLzE,EAAe0E,EAAeC,GAAgB,OAAD,0HACtCjF,EAASS,KAAK,eAAgB,CAACH,QAAO0E,QAAOC,UADP,cACrDvE,EADqD,yBAEpDA,EAAOC,MAF6C,8CADtDoE,GAAc,SAKL/C,EAAezB,GAAmB,OAAD,0HAC1BP,EAASS,KAAK,yBAA0B,CAACuB,QAAOzB,aADtB,cACzCG,EADyC,yBAExCA,EAAOC,MAFiC,8CCHjDK,GAAe,CACjBmD,SAAS,EACThD,MAAO,GACPK,SAAS,GAePC,GACe,SAAC0C,EAAkBhD,EAAeK,GAAlC,MAAuD,CAACnC,KAAM,mBAAoB+B,QAAS,CACpG+C,UAAShD,QAAOK,aChBf0D,GAASb,IAAMC,MAAM,WAAO,IAAD,EACDzB,aAAY,SAACC,GAAD,OAAyBA,EAAMqC,YAAvEhB,EAD6B,EAC7BA,QAAS3C,EADoB,EACpBA,QAASL,EADW,EACXA,MADW,EAEVqB,mBAAS,IAFC,mBAE7BlC,EAF6B,KAEtBmC,EAFsB,KAG9Bb,EAAWqB,cAEXmC,EAAqBC,uBAAa,SAACjC,GACrCX,EAASW,EAAMC,OAAOjB,SACxB,CAACK,IAEG6C,EAAgBD,uBAAa,WAC/BzD,EDUqB,SAACtB,GAC1B,8CAAO,WAAOsB,GAAP,iBAAAC,EAAA,6DACHD,EAASH,IAAwB,EAAM,IAAI,IADxC,SAGe,qEACA,2BAJf,SAKoBsD,GAAwBzE,EAAMiF,cAFnC,qEACA,4BAJf,OAKO5E,EALP,OAMCiB,EAASH,IAAwB,EAAO,GAAId,EAAKa,UANlD,kDASOkC,EAAM,KAAExB,SAASvB,KAAKQ,MAC5BS,EAASH,IAAwB,EAAOiC,GAAK,IAV9C,0DAAP,sDCXa8B,CAAclF,MACxB,CAACsB,EAAUtB,IACd,OACI,yBAAKrB,UAAW,aACZ,+CACCkF,GAAW,0BAAMjF,MAAO,CAACuG,WAAY,SAA1B,WACXtE,GAAS,0BAAMjC,MAAO,CAACwG,MAAO,QAASvE,GACvCK,GAAW,0BAAMtC,MAAO,CAACuG,WAAY,SAA1B,yBACZ,6BACA,kBAACrG,EAAD,CAAOI,YAAa,QAAS2D,SAAUiC,EAAoBhD,MAAO9B,IAClE,kBAAC,EAAD,CAAQZ,KAAM,OAAQ+D,QAAS6B,EAAe3F,SAAUwE,QClBvDwB,GAActB,IAAMC,MAAM,SAACzF,GAAgC,IAAD,EACjCgE,aAAa,SAACC,GAAD,OAAyBA,EAAMqC,YAAvEhB,EAD4D,EAC5DA,QAAShD,EADmD,EACnDA,MAAOK,EAD4C,EAC5CA,QAD4C,EAEnCgB,mBAAS,IAF0B,mBAE5DjC,EAF4D,KAElDqF,EAFkD,KAG5D5D,EAAU6D,cAAV7D,MACDJ,EAAWqB,cAEX6C,EAAiBT,uBAAa,SAACjC,GACjCwC,EAAYxC,EAAMC,OAAOjB,SAC1B,CAACwD,IAIJ,OAAGpE,EACQ,kBAAC,IAAD,CAAUxC,GAAI+G,KAGrB,yBAAK9G,UAAW,aACZ,4CACCkF,GAAW,0BAAMjF,MAAO,CAACuG,WAAY,SAA1B,WACXtE,GAAS,0BAAMjC,MAAO,CAACwG,MAAO,QAASvE,GACxC,kBAAC/B,EAAD,CAAOI,YAAa,eAAgBH,KAAM,WAAY+C,MAAO7B,EAAU4C,SAAU2C,IACjF,kBAAC,EAAD,CAAQpG,KAAM,OAAQC,SAAUwE,EAASV,QAZ7B,WAChB7B,EFwBmB,SAACI,EAAezB,GACvC,8CAAO,WAAOqB,GAAP,iBAAAC,EAAA,6DACHD,EAASH,IAAwB,EAAM,IAAI,IADxC,kBAGoBsD,GAAwB/C,EAAOzB,GAHnD,OAGKG,EAHL,OAICkB,EAASH,IAAwB,EAAO,GAAIf,EAAOc,UAJpD,gDAOOkC,EAAM,KAAExB,SAASvB,KAAKQ,MAC5BS,EAASH,IAAwB,EAAOiC,GAAK,IAR9C,yDAAP,sDEzBasC,CAAYhE,EAAOzB,W,oBCXvB0F,GAAa,SAACpH,GAKvB,IALkD,IAAD,EACT2D,mBAAS,GADA,mBAC5C0D,EAD4C,KAC7BC,EAD6B,KAG7CC,EAAYC,KAAKC,KAAKzH,EAAM0H,oBAAsB1H,EAAM2H,aACxDC,EAAW,GACNC,EAAI,EAAGA,GAAKN,EAAWM,IAC5BD,EAASE,KAAKD,GAIlB,IAAME,EAAeP,KAAKC,KAAKF,EAAYvH,EAAM2H,aAE3CK,GAAeX,EAAgB,GAAKrH,EAAM2H,YAAc,EACxDM,EAAeZ,EAAgBrH,EAAM2H,YACrCO,EAAeN,EAASO,QAAO,SAAAC,GAAC,OAAIA,GAAKJ,GAAeI,GAAKH,KACnE,OACI,yBAAK7H,UAAWC,KAAMgI,YAAahB,EAAgB,GAAK,0BAAMzC,QAAS,WACnE0C,EAAiBD,EAAgB,KADmB,IAEpD,gCAAS,KAF2C,KAGnDa,EAAaI,KAAI,SAAAF,GACd,OAAO,0BAAMxD,QAAS,kBAAM5E,EAAMuI,cAAcH,IAAII,IAAKJ,GAAIA,IAAMpI,EAAMyI,KAAO,2BAAIL,GAASA,MAEhGL,EAAeV,GAAiB,0BAAMzC,QAAS,WAC5C0C,EAAiBD,EAAgB,KADJ,IAE7B,8BAAO,KAFsB,O,SCLhCqB,GAAW,SACLC,GAA2B,IAAD,wIAAVF,EAAU,+BAAH,EAC5B/F,EAD+B,wBACRiG,GADQ,SAEhBxH,EAChByH,IADgB,qBACoBlG,EADpB,iBAC+B+F,EAD/B,iBAFgB,cAE/B5G,EAF+B,yBAI9BA,EAAOC,MAJuB,8CADhC4G,GAAW,SAOHhG,EAAYmG,GAAgC,IAAD,sIAAbC,EAAa,+BAAJ,GAAI,SACnC3H,EAASS,KAAK,cAAe,CAC9CmH,KAAM,CACFC,aAActG,EACdmG,WACAC,YALgD,cAClDjH,EADkD,yBAQjDA,EAAOC,MAR0C,8CAPnD4G,GAAW,SAiBHhG,GAAY,OAAD,0HACHvB,EAASe,OAAT,yBAAkCQ,IAD/B,cAClBb,EADkB,yBAEjBA,EAAOC,MAFU,8CAjBnB4G,GAAW,SAqBHhG,EAAWmG,GAAgC,IAAD,sIAAbC,EAAa,+BAAJ,GAAI,SAClC3H,EAASc,IAAI,cAAc,CAC5C8G,KAAM,CACF3F,IAAKV,EACLmG,WACAC,YAL+C,cACjDjH,EADiD,yBAShDA,EAAOC,MATyC,8CArBlD4G,GAAW,SAgCJhG,EAAYuG,GAAgB,OAAD,oHAClC9H,EAASc,IAAT,eAA6B,CAACiH,QAASxG,EAAIuG,UADT,8CC9BlCE,GAAW,SACLC,GAA2B,IAAD,wIAAVX,EAAU,+BAAH,EAC5BY,EAAWD,EAAM,oBAAgBA,GAAU,GADZ,SAEhBjI,EAChByH,IADgB,2BACmBH,GADnB,OAC0BY,EAD1B,iBAFgB,cAE/BxH,EAF+B,yBAI9BA,EAAOC,MAJuB,8CADhCqH,GAAW,SAOH5F,GAAgB,OAAD,0HACPpC,EAASS,KAAe,cAAe,CACxD0H,UAAW,CACPzI,KAAM0C,KAHc,cACtB1B,EADsB,yBAMrBA,EAAOC,MANc,8CAPvBqH,GAAW,SAeHzG,GAAY,OAAD,0HACHvB,EAASe,OAAT,yBAA4CQ,IADzC,cAClBb,EADkB,yBAEjBA,EAAOC,MAFU,8CAfnBqH,GAAW,SAmBHzG,EAAWa,GAAgB,OAAD,0HACtBpC,EAASc,IAAc,cAAc,CACtDqH,UAAW,CACPlG,IAAKV,EACL7B,KAAM0C,KAJ6B,cACrC1B,EADqC,yBAOhCA,EAAOC,MAPyB,8CCzCzCK,GAAe,CACjBoH,MAAO,IAYE3G,GACQ,SAAC2G,GAAD,MAA6B,CAAC/I,KAAM,0BAA2B+I,UAGvEC,GAAW,eAACJ,EAAD,uDAAU,GAAIX,EAAd,uDAAqB,EAArB,8CAA2C,WAAO1F,EAAU0G,GAAjB,eAAAzG,EAAA,6DAC/DD,EAASR,GAAQ,EAAM,OADwC,kBAGxC4G,GAAkBC,EAAQX,GAHc,OAGrD3G,EAHqD,OAI3DmB,IAAQC,IAAI,QAASpB,EAAKqB,OAC1BJ,EAAS2G,GAAa5H,EAAK4F,oBAAqBe,IAChD1F,EAASH,GAAwBd,EAAK6H,YACtC5G,EAASR,GAAQ,EAAO,OAPmC,kDAS3DQ,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QATmB,0DAA3C,yDCpBlBH,GAAe,CACjByH,SAAU,CACNR,OAAQ,GACRX,KAAK,EACLoB,MAAO,KAgBFjH,GACE,SAACwG,GAAD,MAAqB,CAAC5I,KAAK,4BAA6B+B,QAAS,CAAC6G,YADpExG,GAEO,SAAC6F,GAAD,MAAmB,CAACjI,KAAK,kCAAmC+B,QAAQ,CAACkG,UAF5E7F,GAGM,SAACiH,GAAD,MAAoB,CAACrJ,KAAK,iCAAkC+B,QAAQ,CAACsH,WAI3EH,GAAe,SAACG,EAAepB,GAAhB,OAAgD,SAAC1F,GACzEA,EAASH,GAAsBiH,IAC/B9G,EAASH,GAAuB6F,MAMvBqB,GAAU,SAACC,GAAD,8CAAiC,WAAOhH,EAAU0G,GAAjB,SAAAzG,EAAA,sDACpDD,EAASH,GAAuBmH,IADoB,2CAAjC,yDCjCjB5H,GAAe,CACjB6H,MAAO,IAYLC,GAAkB,SAACD,GAAD,MAA6B,CAACxJ,KAAM,0BAA2BwJ,UAE1EE,GAAe,SAACvB,GAAD,IAAiBF,EAAjB,uDAAwB,EAAxB,8CAA8C,WAAO1F,GAAP,eAAAC,EAAA,6DACtED,EAASR,GAAQ,EAAM,OAD+C,kBAG/CmG,GAAkBC,EAAQF,GAHqB,OAG5D3G,EAH4D,OAIlEiB,EAASR,GAAQ,EAAO,OACxBQ,EAAS2G,GAAa5H,EAAKqI,gBAAiB1B,IAC5C1F,EAASkH,GAAgBnI,EAAKkI,QANoC,kDAQlEjH,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAR0B,0DAA9C,uD,oBChBf8H,GAA6B,SAAC,GAAyC,IAAxCrJ,EAAuC,EAAvCA,SAAUsJ,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,KAAMvF,EAAW,EAAXA,MAC9DwF,EAAe,SAAChG,GAElB8F,KAEJ,OAAKC,EAID,oCACI,yBAAKlK,UAAWC,KAAMmK,aAAc5F,QAAS2F,IAC7C,yBAAKnK,UAAWC,KAAMoK,MAAOpK,MAAO,CAAC0E,UACjC,yBAAK3E,UAAWC,KAAMqK,WAAY9F,QAAS2F,GAA3C,QACCxJ,IAPF,MCJF4J,GAAqC,SAAC3K,GAAW,IAAD,EACzB2D,mBAAS,IADgB,mBAClDkF,EADkD,KACxC+B,EADwC,OAE7BjH,mBAAS,IAFoB,mBAElDmF,EAFkD,KAE1C+B,EAF0C,KAGnDC,EAAoB,WACtB9K,EAAM+K,cAAc/K,EAAMgL,WAC1BJ,EAAY,IACZC,EAAU,KAMd,OACI,kBAAC,GAAD,CAAOP,KAAMtK,EAAMgL,UAAWX,WAAYS,GACtC,6BACI,4BAAK9K,EAAME,MAAX,MACA,kBAACK,EAAD,CAAOgD,MAAOsF,EAAUvE,SAAU,SAAC2G,GAAD,OAAOL,EAAYK,EAAEC,cAAc3H,UACrE,kBAAChD,EAAD,CAAOgD,MAAOuF,EAAQxE,SAAU,SAAC2G,GAAD,OAAOJ,EAAUI,EAAEC,cAAc3H,WAErE,yBAAKlD,MAAO,CAAC8K,QAAS,OAAQC,cAAe,WACzC,kBAAC,EAAD,CAAQvK,KAAM,OAAQR,MAAO,CAACgL,OAAQ,OAAQzG,QAZnC,WACnBiE,EAASyC,QAAUtL,EAAMuL,QAAQ1C,EAAUC,GAC3CgC,OAWQ,kBAAC,EAAD,CAAQjK,KAAM,OAAQR,MAAO,CAACgL,OAAQ,OAAQzG,QAASkG,O,oBCpB1DU,GAAiC,SAACxL,GAAW,IACjDyL,EAAWzL,EAAXyL,QACL,OAAIA,EAIA,yBAAKrL,UAAWC,KAAMqL,WAClB,yBAAKtL,UAAWC,KAAMsL,OAClB,yBAAKvL,UAAS,UAAKC,KAAMuL,MAAX,aAAqBvL,KAAMwL,OACrC,yBAAKzL,UAAWC,KAAMyL,SAClB,wCACA,2BAAIL,EAAQ5C,YAGpB,yBAAKzI,UAAS,UAAKC,KAAM0L,KAAX,YAAmB1L,KAAMwL,OACnC,yBAAKzL,UAAWC,KAAMyL,SAClB,sCACA,2BAAIL,EAAQ3C,YAdpB,8CCDHkD,GAAiC,SAAC,GAAgC,IAA/BtJ,EAA8B,EAA9BA,GAAIsH,EAA0B,EAA1BA,MAAOM,EAAmB,EAAnBA,KAAM2B,EAAa,EAAbA,QAAa,EACpCtI,mBAAmBqG,EAAM,IADW,mBACnEkC,EADmE,KACtDC,EADsD,KAEpEpJ,EAAWqB,cACjByB,qBAAU,WACFmE,EAAMjE,OAAS,GAAGoG,EAAeC,GAAQpC,MAC9C,CAACjH,EAAUL,EAAIsH,IAClB,IACMqC,EAAY,SAACC,GACfvJ,EJ6CiB,SAACL,EAAY4J,GAAb,8CAAgD,WAAOvJ,GAAP,SAAAC,EAAA,sEAC/D0F,GAAmBhG,EAAI4J,GADwC,2CAAhD,sDI7CRC,CAAUL,EAAY9I,IAAKkJ,IACpCH,EAAeC,GAAQpC,KAE3B,OACI,kBAAC,GAAD,CAAOM,KAAMA,EAAMD,WAAY4B,GAC3B,4CACI,kBAAC,EAAD,CAAQrH,QARL,kBAAMuH,EAAeC,GAAQpC,KAQPnJ,KAAM,OAAQC,UAAWoL,IAClD,kBAAC,GAAD,CAAYT,QAASS,IACxBA,GAAeI,GAAOhE,KAAI,SAACkE,EAAG3E,GAAJ,OACvB,kBAAC,EAAD,CAAQW,IAAK,SAAWX,EAChBxH,MAAO,CAAC8K,QAAS,cAAesB,YAAa,OAC7C7H,QAAS,kBAAMyH,EAAWxE,EAAI,KAAM2E,QAMtDF,GAAS,CAAC,eAAM,eAAM,eAAM,eAAM,gBAElCF,GAAU,SAACpC,GACb,IAAM0C,EAAM1C,EAAM2C,QAAO,SAACC,EAAK7D,GAAN,OAAe6D,GAAO,EAAI7D,EAAKE,QAAU,EAAIF,EAAKE,SAAQ,GAC7E4D,EAAOrF,KAAKsF,SAAWJ,EACvBK,EAAM/C,EAAM2C,QAAO,SAACC,EAAkC7D,EAAMlB,GAC1D,IAAMmF,EAASJ,EAAIF,KAAO,EAAI3D,EAAKE,QAAU,EAAIF,EAAKE,OACtD,MAAO,CAACyD,IAAKM,EAAQtK,GAAIsK,EAASH,EAAOhF,EAAI+E,EAAIlK,MAEnD,CAACgK,IAAK,EAAGhK,IAAK,IACpB,OAAOsH,EAAM+C,EAAIrK,GAAK,IChCbuK,GAAQzH,IAAMC,MAAK,SAACzF,GAAqC,IAAD,EAC3B2D,oBAAS,GADkB,mBAC1DuJ,EAD0D,KAC7CC,EAD6C,OAE3BxJ,oBAAS,GAFkB,mBAE1DyJ,EAF0D,KAE7CC,EAF6C,OAG/B1J,oBAAS,GAHsB,mBAG1D2J,EAH0D,KAG/CC,EAH+C,OAI/B5J,mBAAS,IAJsB,mBAI1D6J,EAJ0D,KAI/CC,EAJ+C,OAKzC9J,mBAAS,GALgC,mBAK1D8E,EAL0D,KAKpDqB,EALoD,KAM1DE,EAAShG,aAAY,SAACC,GAAD,OAAyBA,EAAM8E,QAApDiB,MACAJ,EAAY5F,aAAY,SAACC,GAAD,OAAyBA,EAAMmF,UAAvDQ,SACAlH,EAAMsE,cAANtE,GACDK,EAAWqB,cAEjByB,qBAAU,WACN9C,EAASmH,GAAaxH,EAAI+F,MAC3B,CAAC1F,EAAU0F,EAAM/F,IAEpB,IACMgL,EAAoB,SAACC,GAAD,OAAoB5K,ELaxB,SAAC4K,EAAgBhF,GAAjB,8CAAoD,WAAO5F,GAAP,SAAAC,EAAA,6DAC1ED,EAASR,GAAQ,EAAM,OADmD,kBAGhEmG,GAAoBiF,GAH4C,OAItE5K,EAASR,GAAQ,EAAO,OACxBQ,EAASmH,GAAavB,IALgD,gDAOtE5F,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAP8B,yDAApD,sDKbiCsL,CAAWD,EAAQjL,KAQ1E,OACI,wCAAG,yBAAKtC,UAAWC,KAAMoI,MACrB,yBAAKrI,UAAWC,KAAMwN,SAClB,2CACI,kBAAC,EAAD,CAAQhN,KAAM,IAAK+D,QAAS,kBAAMuI,GAAgBD,IAC1C7M,MAAO,CAAC8K,QAAS,cAAc2C,WAAW,WAEtD,0CACI,kBAAC,EAAD,CAAQjN,KAAM,aAAc+D,QAAS,kBAAM2I,GAAcD,IACjDjN,MAAO,CAAC8K,QAAS,cAAc2C,WAAW,WAEtD,kBAAC,GAAD,CAAe9C,UAAWkC,EAAanC,aAAc,kBAAMoC,GAAgBD,IAC5D3B,QArBD,SAAC1C,EAAkBC,GAAnB,OAAsC/F,ELI7C,SAAC4F,EAAgBE,EAAkBC,GAAnC,8CAAsE,WAAO/F,GAAP,SAAAC,EAAA,6DACzFD,EAASR,GAAQ,EAAM,OADkE,kBAG/EmG,GAAoBC,EAAQE,EAAUC,GAHyC,OAIrF/F,EAASR,GAAQ,EAAO,OACxBQ,EAASmH,GAAavB,IAL+D,gDAOrF5F,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAP6C,yDAAtE,sDKJsDyL,CAAQrL,EAAImG,EAAUC,KAqBxC5I,MAAO,gBAClD,kBAAC,GAAD,CAAe8K,UAAWoC,EAAarC,aAAc,kBAAMsC,GAAgBD,IAC5D7B,QArBL,SAAC1C,EAAkBC,GAAnB,OAAsC/F,ELsBtC,SAAC4K,EAAgBhF,EAAgBE,EAAkBC,GAAnD,8CACtB,WAAO/F,GAAP,SAAAC,EAAA,6DACID,EAASR,GAAQ,EAAM,OAD3B,kBAGcmG,GAAoBiF,EAAQ9E,EAAUC,GAHpD,OAIQ/F,EAASR,GAAQ,EAAO,OACxBQ,EAASmH,GAAavB,IAL9B,gDAOQ5F,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAPhD,yDADsB,sDKtB+C0L,CAAWR,EAAW9K,EAAImG,EAAUC,KAqBtD5I,MAAO,gBAC9C,+BACI,+BACA,4BACI,oCACA,sCACA,wCAGJ,+BACC8J,EAAM1B,KAAI,SAAA2F,GACP,OAAO,wBAAIzF,IAAKyF,EAAEC,QAAUD,EAAEE,QAASzL,GAAIuL,EAAE7K,KACzC,4BAAK6K,EAAEhF,OACP,wBAAIrE,QAAS,kBAAM8I,EAAkBO,EAAE7K,OAAM,yCAC7C,wBAAIwB,QAAS,kBAjCZ+I,EAiCkCM,EAAE7K,IAhCzDqK,EAAaE,QACbN,GAAe,GAFK,IAACM,IAiC0C,+CAKvD,kBAAC,GAAD,CAAWjL,GAAIA,EAAIsH,MAAOA,EAAOM,KAAMgD,EAAWrB,QAAS,kBAAMsB,GAAcD,OAEnF,kBAAC,GAAD,CAAY5F,oBAAqBkC,EAASC,MAC9BpB,KAAMmB,EAASnB,KAAMF,cAAeuB,EAASnC,YAAa,S,oBClErEyG,GAAU5I,IAAMC,MAAK,YAAuD,IAArDhD,EAAoD,EAApDA,QAAS4L,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,YAEjD,OACI,yBAAKlO,UAAWC,KAAMoI,MAClB,yBAAKrI,UAAWC,KAAMkO,gBAClB,yBAAKnO,UAAWC,KAAMoC,SAClB,yBAAK+L,IAAK/L,EAAQT,OAASS,EAAQT,OAASyM,IAAWC,IAAI,UAE/D,6BAAMjM,EAAQ5B,MACd,kBAAC,EAAD,CAAQA,KAAM,SAAUR,MAAO,CAAC2E,UAAW,QAASJ,QAASyJ,IAC7D,kBAAC,EAAD,CAAQxN,KAAM,UAAWR,MAAO,CAAC2E,UAAW,KAAMJ,QAAS0J,SCV9DK,GAASnJ,IAAMC,MAAK,SAACzF,GAAqB,IAAD,EACxB2D,mBAAS,IADe,mBAC3CJ,EAD2C,KACpCqL,EADoC,KAOlD,OACI,oCACI,kBAACrO,EAAD,CAAOI,YAAa,SAAU4C,MAAOA,EAAOe,SAPhC,SAACC,GAAD,OAA0CqK,EAASrK,EAAMC,OAAOjB,QAOTsL,WALtD,SAAC5D,GACA,KAAfA,EAAE6D,UAAiB9O,EAAMoJ,OAAO7F,MAK/B,kBAAC,EAAD,CAAQ1C,KAAM,SAAUR,MAAO,CAAC8K,QAAS,gBAAiBvG,QAP5C,kBAAM5E,EAAMoJ,OAAO7F,UCHhCwL,GAAiC,SAAC/O,GAAW,IAAD,EAC3B2D,mBAAS,IADkB,mBAC9CJ,EAD8C,KACvCqL,EADuC,KAE/C9D,EAAoB,WACtB9K,EAAM+K,cAAc/K,EAAMgL,WAC1B4D,EAAS,KAMb,OACI,kBAAC,GAAD,CAAOtE,KAAMtK,EAAMgL,UAAWX,WAAYS,GACtC,6BACI,4BAAK9K,EAAME,MAAX,MACA,kBAACK,EAAD,CAAOgD,MAAOA,EAAOe,SAAU,SAAC2G,GAAD,OAAO2D,EAAS3D,EAAEC,cAAc3H,WAEnE,yBAAKlD,MAAO,CAAC8K,QAAS,OAAQC,cAAe,WACzC,kBAAC,EAAD,CAAQvK,KAAM,OAAQR,MAAO,CAACgL,OAAQ,OAAQzG,QAXnC,WACnBrB,EAAM+H,QAAUtL,EAAMgP,IAAIzL,GAC1BuH,OAUQ,kBAAC,EAAD,CAAQjK,KAAM,OAAQR,MAAO,CAACgL,OAAQ,OAAQzG,QAASkG,OChB1DmE,GAAWzJ,IAAMC,MAAK,SAACzF,GAAqB,IAAD,EACd2D,oBAAS,GADK,mBAC7CuL,EAD6C,KAChCC,EADgC,KAE9CpM,EAAWqB,cACX4G,EAAY,kBAAMmE,GAAgBD,IAGxC,OACI,oCACI,4BACI,4BAAI,kBAAC,EAAD,CAAMjP,KAAMmP,GAAYpP,EAAM0C,GAAIxC,MAAOF,EAAMa,QACnD,4BAAKb,EAAMiJ,OACX,4BAAKjJ,EAAMqP,YACX,4BACI,yBAAKjP,UAAW,SAAUwE,QARpB,kBAAM7B,GX2CLL,EW3CyB1C,EAAM0C,GX2ChC,uCAAgC,WAAOK,GAAP,SAAAC,EAAA,6DACtDD,EAASR,GAAQ,EAAM,OAD+B,kBAG5C4G,GAAoBzG,GAHwB,OAIlDK,EAASR,GAAQ,EAAO,OACxBQ,EAASyG,MALyC,gDAOlDzG,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAPU,yDAAhC,4DAACI,IWnCP,UACA,yBAAKtC,UAAW,SAAUwE,QAASoG,GAAnC,YAGR,kBAAC,GAAD,CAAWA,UAAWkE,EACXnE,aAAcC,EACdgE,IAfG,SAACzL,GAAD,OAAmBR,EXkCnB,SAACL,EAAYa,GAAb,8CAA+C,WAAOR,GAAP,SAAAC,EAAA,6DACrED,EAASR,GAAQ,EAAM,OAD8C,kBAG3D4G,GAAoBzG,EAAIa,GAHmC,OAIjER,EAASR,GAAQ,EAAO,OACxBQ,EAASyG,MALwD,gDAOjEzG,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAPyB,yDAA/C,sDWlC4BgN,CAAWtP,EAAM0C,GAAIa,KAehCrD,MAAO,uB,oBCdrCqP,GAAY/J,IAAMC,MAAK,WAAO,IAChC8D,EAASvF,aAAY,SAACC,GAAD,OAAyBA,EAAMsF,SAApDA,MACAK,EAAY5F,aAAY,SAACC,GAAD,OAAyBA,EAAMmF,UAAvDQ,SACAvH,EAAa2B,aAAY,SAACC,GAAD,OAAyBA,EAAME,OAAxD9B,UACAG,EAAUwB,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAArD1B,OAJ+B,EAKJmB,oBAAkB,GALd,mBAK/BqH,EAL+B,KAKpBD,EALoB,KAMhChI,EAAWqB,cACjByB,qBAAU,WACN9C,EAASyG,GAASI,EAASR,OAAQQ,EAASnB,SAC7C,CAAC1F,EAAU6G,EAASnB,KAAMmB,EAASR,SACtC,IAEMoG,EAAchJ,uBAAY,SAACjD,GAAD,OAAmBR,EXS9B,SAACQ,GAAD,8CAAmC,WAAOR,GAAP,SAAAC,EAAA,sDACxDD,EAASH,GAAkBW,IAC3BR,EAASyG,GAASjG,IAFsC,2CAAnC,sDWTuCkM,CAAUlM,MAAS,CAACR,IAEhF,OAAKP,EAID,yBAAKpC,UAAWC,KAAMoI,MAClB,qCACA,6BACI,kBAACkG,GAAD,CAAQvF,OAAQoG,IAChB,kBAAC,EAAD,CAAQ5K,QAZA,kBAAMmG,GAAa,IAYGlK,KAAM,WAAYC,SAAUuB,KAE9D,yBAAKjC,UAAWC,KAAMwN,SAClB,+BACI,+BACA,4BACI,oCACA,qCACA,qCACA,yCAGJ,+BACCtE,EAAMjB,KAAI,SAAAoH,GAAI,OAAI,kBAACT,GAAD,CACfzG,IAAKkH,EAAKtM,KAAM,IAAIuM,MAAOC,UAAWlN,GAAIgN,EAAKtM,IAC/CvC,KAAM6O,EAAK7O,KAAMoI,MAAOyG,EAAKzG,MAC7BoG,WAAYK,EAAKL,mBAK7B,kBAAC,GAAD,CAAY3H,oBAAqBkC,EAASC,MAAOpB,KAAMmB,EAASnB,KACpDF,cA/BC,SAACwB,GAAD,OAAiBhH,EAAS+G,GAAQC,KA+BNpC,YAAa,KACtD,kBAAC,GAAD,CAAWqD,UAAWA,EAAWD,aAAcA,EAAciE,IAlCrD,SAACzL,GAAD,OAAmBR,EZWb,SAACQ,GAAD,8CAAmC,WAAOR,GAAP,SAAAC,EAAA,6DACzDD,EAASR,GAAQ,EAAM,OADkC,kBAG/C4G,GAAoB5F,GAH2B,OAIrDR,EAASR,GAAQ,EAAO,OACxBQ,EAASyG,MAL4C,gDAQrDzG,EAASR,GAAQ,EAAM,KAAEc,SAASvB,KAAKQ,QARc,yDAAnC,sDYXsBuN,CAAWtM,KAkC4BrD,MAAO,mBA9B/E,kBAAC,IAAD,CAAUC,GAAI,c,oBClBhB2P,GAAsC,SAAC,GAAoB,IAAnBxF,EAAkB,EAAlBA,KAAMyF,EAAY,EAAZA,OAChDtN,EAAWuB,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAAtDzB,QAD4D,EAEzCkB,mBAAwBlB,EAAQ5B,MAFS,mBAE5D0C,EAF4D,KAErDqL,EAFqD,OAGvCjL,mBAAwBlB,EAAQT,QAHO,mBAG5DA,EAH4D,KAGpDgO,EAHoD,KAI7DjN,EAAWqB,cAiBjB,OACI,kBAAC,GAAD,CAAOW,MAAO,QAASuF,KAAMA,EAAMD,WAAY0F,GAC3C,yBAAK3P,UAAWC,KAAM4P,SAClB,yBAAK7P,UAAWC,KAAMmD,OAClB,yBAAKgL,IAAKxM,GAAUkO,IAAKxB,IAAI,MAEjC,yBAAKtO,UAAWC,KAAM8P,MAClB,yBAAK/P,UAAWC,KAAMK,OAClB,kBAACH,EAAD,CAAOI,YAAa,OAAQ4C,MAAOA,GAAgB,GAC5Ce,SAAU,SAAC2G,GAAD,OAAO2D,EAAS3D,EAAEC,cAAc3H,WAErD,kBAAC,EAAD,KACI,kBAAChD,EAAD,CAAOC,KAAM,OAAQ4P,aAAc,GAC5B9L,SArBL,SAAC2G,GACnB,IAAMoF,EAAOpF,EAAEzG,OAAO8L,OAASrF,EAAEzG,OAAO8L,MAAM,GACxCC,EAAS,IAAIC,WACnBH,GAAQE,EAAOE,cAAcJ,GAC7BE,EAAOG,OAAS,WACZV,EAAmC,kBAAlBO,EAAO1O,OAAsB0O,EAAO1O,OAAS,QAgBlBxB,MAAO,CAAC8K,QAAS,WAErD,kBAAC,EAAD,CAAQvG,QA/BF,WACdrB,IAEIR,EAASO,EAAcC,EADvBvB,GAEiC,KACrC+N,MA0BwC1P,MAAO,CAACgL,OAAQ,MAAhD,cCnCPsF,GAA6B,WAAO,IAAD,EACVhN,oBAAS,GADC,mBACrCiN,EADqC,KAC1BC,EAD0B,KAEtC9N,EAAWqB,cAF2B,EAGlBJ,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAA9DzB,EAHqC,EAGrCA,QAEP,OAL4C,EAG5BD,OAMZ,yBAAKpC,UAAW,WACZ,kBAACgO,GAAD,CAAS3L,QAASA,EAAS4L,OANb,kBAAMtL,E3B0DV,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sEAClBxB,IADkB,OAExBuB,EAASH,EAAmB,KAAM,KAAM,OACxCG,EAASH,GAAiB,IAHF,2CAAN,wD2BpDwC0L,YAAa,kBAAMuC,GAAa,MAClF,kBAACtB,GAAD,MACA,kBAAC,GAAD,CAAgBjF,KAAMsG,EAAWb,OAAQ,kBAAMc,GAAcD,OAN1D,kBAAC,IAAD,CAAUzQ,GAAI+G,M,oBCbhB4J,GAAO1P,IAAMC,OAAO,CAC7BC,QAFY,8CAMHyP,GAAU,SACJtI,GAAe,OAAD,mHACnBtF,EAAQF,IAAQ2F,IAAI,SADD,SAEJkI,GAAKlI,IAAL,6BAAiDzF,EAAjD,iBAA+DsF,EAA/D,iBAFI,cAEnB5G,EAFmB,yBAGlBA,EAAOC,MAHW,8CADpBiP,GAAU,SAUD5N,EAAe6N,GAAkB,OAAD,0HACzBF,GAAKlP,KAA8B,yBAA0B,CAACuB,QAAO6N,YAD5C,cACxCnP,EADwC,yBAEvCA,EAAOC,MAFgC,8CAVzCiP,GAAU,SAcG5N,GAAgB,OAAD,0HACZ2N,GAAKlI,IAAL,wCAAgEzF,IADpD,cAC3BtB,EAD2B,yBAE1BA,EAAOC,MAFmB,8CCjBnCK,GAAe,CACjB8O,MAAO,I,oBCFL9O,GAAe,CACjB+O,SAAU,GACVC,eAAe,GAebC,GAAqB,SAACC,GAAD,MAAwB,CAAC7Q,KAAM,uBAAwB6Q,SCbrEC,GAAO,WAAO,IAAD,EACYtN,aAAY,SAACC,GAAD,OAAyBA,EAAMsN,QAAtEL,EADe,EACfA,SAAUC,EADK,EACLA,cACX7L,EAAUtB,aAAY,SAACC,GAAD,OAAyBA,EAAME,IAAI9B,aAFzC,EAGIsB,mBAAS,IAHb,mBAGfJ,EAHe,KAGRqL,EAHQ,KAIhB7L,EAAWqB,cAEjByB,qBAAU,WACN9C,EDS0B,uCAAoB,WAAOA,GAAP,iBAAAC,EAAA,yDAClDD,EAASR,GAAQ,EAAM,OAD2B,WAG1CY,EAAQF,IAAQ2F,IAAI,UAHsB,iCAKrBmI,GAAwB5N,GALH,OAKpCtB,EALoC,OAM1CkB,EAR+B,CAACvC,KAAM,6BAA8B+C,OAQ7C,IACvBR,EAASR,GAAQ,EAAO,OACxBQ,EAZkD,CAACvC,KAAM,4BAA6B0Q,SAY1DrP,EAAO2P,sBACnCvO,IAAQC,IAAI,QAASrB,EAAOsB,OATc,0DAa9CJ,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAbM,0DAApB,yDCR3B,CAACS,IAKJ,OAAO,yBAAK3C,UAAWC,KAAMoR,WACzB,yBAAKrR,UAAWC,KAAM4P,SACjB,aAAIiB,GAAUQ,UAAUpJ,KAAI,SAACqJ,EAAG9J,GAAJ,OAAU,kBAAC,GAAD,CAAYmJ,QAASW,EAAGnJ,IAAKmJ,EAAEC,UAAY/J,QAErFsJ,GAAiB,oCACd,8BAAU5N,MAAOA,EAAOe,SAPV,SAACC,GAAD,OAA6CqK,EAASrK,EAAM2G,cAAc3H,UAQxF,kBAAC,EAAD,CAAQ1C,KAAM,SAAUC,SAAUwE,EAASV,QAT/B,kBAAM7B,GDsBFsO,ECtBuB9N,EDsBxB,uCAAgC,WAAOR,GAAP,iBAAAC,EAAA,yDACvDD,EAASR,GAAQ,EAAM,OADgC,WAG/CY,EAAQF,IAAQ2F,IAAI,UAH2B,iCAM1BmI,GAAoB5N,EAAOkO,GAND,OAMzCxP,EANyC,OAO/CoB,IAAQC,IAAI,QAASrB,EAAOsB,OAC5BJ,EAASR,GAAQ,EAAO,OACxBQ,EAASqO,GAAmBvP,EAAOgQ,wBATY,0DAanD9O,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAbW,0DAAhC,4DAAC+O,QCRtBS,GAAiD,SAAC,GAAe,IAAdd,EAAa,EAAbA,QAC/ChP,EAA4B,gBAAnBgP,EAAQhP,OAA2BgP,EAAQhP,OAAS,KAC7D+P,EAAc,IAAIpC,KAAKqB,EAAQgB,SAC/BC,EAAY,IAAItC,KAEhBuC,EAAW1K,KAAK2K,OAAOF,EAAUrC,UAAYmC,EAAYnC,WADhD,OAEf,OACI,yBAAKxP,UAAWC,KAAM+R,YAClB,+BACI,yBAAK5D,IAAKxM,GAAUqQ,IAAS3D,IAAI,UAErC,yBAAKtO,UAAWC,KAAMiS,aAClB,4BAAKtB,EAAQY,UAAU,8BAAOM,EAAP,aACvB,2BAAIlB,EAAQA,YClCfuB,GAAQ,WACjB,IAAMxP,EAAWqB,cADM,EAEDJ,aAAY,SAACC,GAAD,OAAyBA,EAAMmF,OAAOQ,YAAjEnB,EAFgB,EAEhBA,KAAMoB,EAFU,EAEVA,MACPoH,EAAQjN,aAAY,SAACC,GAAD,OAAyBA,EAAMgN,MAAMA,SAHxC,EAIStN,oBAAS,GAJlB,mBAIhB6O,EAJgB,KAINC,EAJM,KAMvB5M,qBAAU,WACN9C,EHAgB,SAAC0F,GAAD,8CAA8B,WAAO1F,GAAP,eAAAC,EAAA,6DAClDD,EAASR,GAAQ,EAAM,OAD2B,kBAG3BwO,GAAiBtI,GAHU,OAGxC3G,EAHwC,OAI9CiB,EAN6C,CAACvC,KAAM,0BAA2ByQ,MAMtDnP,EAAKmP,QAC9BhO,IAAQC,IAAI,QAASpB,EAAKqB,OAC1BJ,EAAS2G,GAAa5H,EAAK4Q,gBAAiBjK,IAC5C1F,EAASR,GAAQ,EAAO,OAPsB,kDAU9CQ,EAASR,GAAQ,EAAO,KAAEc,SAASvB,KAAKQ,QAVM,0DAA9B,sDGAPqQ,CAASlK,MACnB,CAACA,EAAM1F,IAEV,IAAM6P,EAAeC,iBAAO,MAO5B,OACI,yBAAKzS,UAAWC,KAAMyS,MAClB,yBAAK1S,UAAWC,KAAMqL,WAClB,yBAAKtL,UAAWC,KAAM0S,KAClB,kBAAC,EAAD,CAAQnO,QANF,kBAAM6N,GAAaD,KAMzB,SAEHA,EAAW,kBAAC,GAAD,MACN,oCACE,qCADF,IACiB,qCAAW3I,EAAQoH,EAAMlL,QACxC,yBAAK3F,UAAWC,KAAM2S,WAAYC,IAAKL,EAAcM,SAfnD,SAAC3O,GAAmD,IAAD,EACrBA,EAAM2G,cAA/CiI,EAD8D,EAC9DA,UAAWC,EADmD,EACnDA,aADmD,EACrCC,aACb7L,KAAKC,KAAK0L,KAAeC,GAAcrQ,EAAS+G,GAAQrB,EAAO,MAc7DwI,GAASA,EAAM3I,KAAI,SAACgL,EAAGzL,GACpB,OAAO,kBAAC,GAAD,CAAMW,IAAK8K,EAAElQ,IAAMkQ,EAAEnF,QAAUtG,EAAG0L,KAAMD,YAUzEE,GAAqC,SAAC,GAAY,IAAXD,EAAU,EAAVA,KACzC,OACI,2BAAOnT,UAAWC,KAAMoT,UACpB,yBAAKrT,UAAWC,KAAM2B,QAClB,yBAAKwM,IAAK+E,EAAKvR,OAASuR,EAAKvR,OAASqQ,IAAS3D,IAAK,UAExD,yBAAKtO,UAAWC,KAAMqT,UAClB,4BAAI,wCAAJ,IAAyBH,EAAK1S,MAC9B,mDAAyB0S,EAAKI,yB,SCvDjCC,GAAS,WAMlB,OAAO,yBAAKvT,MAAO,CAACwT,UAAW,OAAQ1I,QAAS,OAAQ2I,eAAgB,SACpEC,WAAY,SAAU3I,cAAe,SAAUpG,UAAW,OACtD,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKgP,aARJ,CACTC,OAAQ,CAAC,MAAO,OAChBC,KAAM,GACNC,SAAU,CAAC,cAAe,sBAMbC,QAAS,CAAC,sBAAuB,6BAA8BrP,MAAO,IAAKsP,OAAQ,IAGnFzP,QAAS,SAACqG,GAAD,OAAYqJ,QAAQC,IAAItJ,EAAErC,IAAI,aAExC,kBAAC,KAAD,CAAW4L,SAAU,CAAC,kBAAmB,0BCPhDpF,GAAY,UACZlI,GAAa,SACb7C,GAAe,WACfM,GAAoB,gBAMpB8P,GAAS,WAClB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxU,KAAMiH,GAAYwN,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOzU,KAAMoE,GAAcqQ,OAAQ,kBAAM,kBAAC,GAAD,SACzC,kBAAC,IAAD,CAAOzU,KAAMmP,GAAY,MAAOsF,OAAQ,SAAC1U,GAAD,OAAW,kBAACiN,GAAUjN,MAC9D,kBAAC,IAAD,CAAOC,KAAM0E,GAAmB+P,OAAQ,kBAAM,kBAACnP,GAAD,SAC9C,kBAAC,IAAD,CAAOtF,KAZQ,UAYWyU,OAAQ,kBAAM,kBAACrO,GAAD,SACxC,kBAAC,IAAD,CAAOpG,KAZO,yBAYWyU,OAAQ,SAAC1U,GAAD,OAAW,kBAAC8G,GAAgB9G,MAC7D,kBAAC,IAAD,CAAOC,KAZO,SAYWyU,OAAQ,kBAAM,kBAAC,GAAD,SACvC,kBAAC,IAAD,CAAOzU,KAZK,OAYWyU,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOzU,KAAM,IAAKyU,OAAQ,kBAAM,+CCxB/BC,GAAS,SAAC3U,GAAsB,IAAD,EACjBA,EAAMyC,QAAtB5B,EADiC,EACjCA,KAAMmB,EAD2B,EAC3BA,OACPyM,EAAYzM,GAAkBkO,IACpC,OACI,yBAAK9P,UAAWC,IAAMuU,QAClB,yBAAKxU,UAAWC,IAAMqL,WAClB,6BACI,kBAAC,EAAD,CAAMzL,KDIF,OCJkBC,MAAO,QAC7B,kBAAC,EAAD,CAAMD,KDEA,SCFkBC,MAAO,WAEnC,yBAAKE,UAAWC,IAAMwU,YAChB7U,EAAMwC,OACF,yBAAKpC,UAAWC,IAAMkT,MACpB,yBAAK/E,IAAKC,EAAWC,IAAI,WACzB,kBAAC,EAAD,CAAMzO,KAAMoE,GAAcnE,MAAOW,KAHxB,kBAAC,EAAD,CAAMZ,KAAMiH,GAAYhH,MAAO,c,oBCbvD4U,GAAW,WAAO,IACpBxS,EAAS0B,aAAa,SAACC,GAAD,OAAyBA,EAAME,OAArD7B,MACDS,EAAWqB,cAIjB,OAAI9B,EAIA,yBAAKlC,UAAWC,KAAM4P,SAClB,yBAAK7P,UAAWC,KAAM0U,cAClB,6BAAMzS,GACN,4BAAQsC,QAVC,WACjB7B,EAASR,GAAQ,EAAO,SAShB,OAND,sCCkBAyS,GAnBO,WAAO,IAAD,EACQhR,aAAY,SAACC,GAAD,OAAyBA,EAAME,OAApE/B,EADiB,EACjBA,WAAYC,EADK,EACLA,UADK,EAEE2B,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAA9DzB,EAFiB,EAEjBA,QAASD,EAFQ,EAERA,OACVO,EAAWqB,cAIjB,OAHAyB,qBAAU,WACN9C,EtCYe,uCAAiB,WAAOA,GAAP,SAAAC,EAAA,sEAC9BD,EAASD,KADqB,OAEpCC,EAJO,CAACvC,KAAM,sBAAuB+B,QAAS,CAACH,YAI3B,KAFgB,2CAAjB,yDsCXhB,CAACW,IACCX,EAGD,yBAAKhC,UAAU,OACX,kBAAC,GAAD,CAAQqC,QAASA,EAASD,OAAQA,IAClC,kBAAC,GAAD,MACA,kBAAC,GAAD,MACCH,GAAa,kBAAC,EAAD,OAPE,6CCNR4S,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpP,MACvB,2D,sBCNAqP,GAAcC,aAAgB,CAChCnR,IxCLsB,WAA0D,IAAzDF,EAAwD,uDAAlC9B,EAAcoT,EAAoB,uCAC/E,OAAQA,EAAO/U,MACX,IAAK,sBACL,IAAK,sBACD,OAAO,2BACAyD,GACAsR,EAAOhT,SAElB,QACI,OAAO0B,IwCHfgN,MVLwB,WAA4C,IAA3ChN,EAA0C,uDAAlC9B,GAAcoT,EAAoB,uCACnE,OAAQA,EAAO/U,MACX,IAAK,0BACD,OAAO,2BAAIyD,GAAX,IAAkBgN,MAAM,GAAD,oBAAMhN,EAAMgN,OAAZ,aAAsBsE,EAAOtE,UACxD,QAAS,OAAOhN,IUEpBsN,KTNuB,WAA4C,IAA3CtN,EAA0C,uDAAlC9B,GAAcoT,EAAoB,uCAClE,OAAQA,EAAO/U,MACX,IAAK,4BACD,OAAO,2BAAIyD,GAAX,IAAkBiN,SAAS,aAAKqE,EAAOrE,YAC3C,IAAK,uBACD,OAAO,2BAAIjN,GAAX,IAAkBiN,SAAS,CAAEqE,EAAOlE,MAAV,oBAAmBpN,EAAMiN,aACvD,IAAK,6BACD,OAAO,2BAAIjN,GAAX,IAAkBkN,cAAeoE,EAAOhS,QAC5C,QACI,OAAOU,ISFfC,MvCAwB,WAAgE,IAA/DD,EAA8D,uDAA3C9B,EAAcoT,EAA6B,uCACvF,OAAQA,EAAO/U,MACX,IAAK,sBACD,OAAO,2BACAyD,GADP,IAEIxB,QAAQ,2BACDwB,EAAMxB,SADN,IAEH5B,KAAM0U,EAAO1U,KACb6B,GAAI6S,EAAO7S,GACXV,OAAQuT,EAAOvT,WAG3B,IAAK,wBACD,OAAO,2BACAiC,GADP,IAEIzB,OAAQ+S,EAAO1S,OAEvB,QACI,OAAOoB,IuCjBf2B,SpCR2B,WAAsE,IAArE3B,EAAoE,uDAA9C9B,EAAcoT,EAAgC,uCAChG,OAAQA,EAAO/U,MACX,IAAK,2BACD,OAAO,2BACAyD,GADP,IACctB,QAAS4S,EAAO5S,UAElC,QACI,OAAOsB,IoCEfqC,ShCP2B,WAAiE,IAAhErC,EAA+D,uDAA1C9B,GAAcoT,EAA4B,uCAC3F,OAAQA,EAAO/U,MACX,IAAK,mBACD,OAAO,2BACAyD,GACAsR,EAAOhT,SAElB,QAAS,OAAO0B,IgCCpBsF,M1BVwB,WAAmE,IAAlEtF,EAAiE,uDAA3C9B,GAAcoT,EAA6B,uCAC1F,OAAQA,EAAO/U,MACX,IAAK,0BACD,OAAO,2BAAIyD,GAAX,IAAkBsF,MAAM,aAAKgM,EAAOhM,SACxC,QACI,OAAOtF,I0BMf8E,KxBXwB,WAAyE,IAAxE9E,EAAuE,uDAAjD9B,GAAcoT,EAAmC,uCAChG,OAAQA,EAAO/U,MACX,IAAK,0BACD,OAAO,2BAAIyD,GAAX,IAAkB+F,MAAM,aAAKuL,EAAOvL,SACxC,QACI,OAAO/F,IwBOfmF,OzBVyB,WAAuE,IAAtEnF,EAAqE,uDAA5C9B,GAAcoT,EAA8B,uCAC/F,OAAQA,EAAO/U,MACX,IAAK,4BACL,IAAK,kCACL,IAAK,iCAAiC,OAAO,2BACtCyD,GAD+B,IAElC2F,SAAS,2BAAK3F,EAAM2F,UAAa2L,EAAOhT,WAE5C,QAAS,OAAO0B,MyBMXuR,GAAQC,aAAYJ,GAAaK,aAAgBC,OAE9DT,OAAOM,MAAQA,GClBfI,IAASlB,OACL,kBAAC,IAAMmB,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,GAAD,SAIZM,SAASC,eAAe,SF0HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhU,GACLgS,QAAQhS,MAAMA,EAAM0O,c","file":"static/js/main.68c65e46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Card_page__1oRrV\",\"container\":\"Card_container__24Jcm\",\"items\":\"Card_items__3aJP6\",\"side\":\"Card_side__1jxn3\",\"content\":\"Card_content__TLQEa\",\"front\":\"Card_front__xkAAu\",\"back\":\"Card_back__2-teS\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.2da04171.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Users_wrap__1xpap\",\"container\":\"Users_container__FLDP2\",\"btn\":\"Users_btn__2frFr\",\"usersBlock\":\"Users_usersBlock__3u74r\",\"userItem\":\"Users_userItem__j0uDG\",\"avatar\":\"Users_avatar__2hPA6\",\"userDesc\":\"Users_userDesc__21jUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__6ID6O\",\"checkbox\":\"Input_checkbox__2wlAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2aWIs\",\"container\":\"Header_container__3DOIX\",\"rightBlock\":\"Header_rightBlock__1gyyK\",\"user\":\"Header_user__1z6QQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simpleButton\":\"Button_simpleButton__2xCRk\",\"btnDisabled\":\"Button_btnDisabled__34Ouv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SettingProfile_wrapper__1QQVD\",\"image\":\"SettingProfile_image___V_O5\",\"form\":\"SettingProfile_form__3XeJW\",\"input\":\"SettingProfile_input__3Ew1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBlock\":\"Chat_chatBlock__3P5lo\",\"wrapper\":\"Chat_wrapper__2MNBp\",\"dialogItem\":\"Chat_dialogItem__3SDXn\",\"messageBody\":\"Chat_messageBody__3krpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"Modal_modalOverlay__hFTwT\",\"modal\":\"Modal_modal__3EBcu\",\"modalClose\":\"Modal_modalClose__Dcc3h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__o_19I\",\"overlayProfile\":\"Profile_overlayProfile__18sU1\",\"profile\":\"Profile_profile__3pX6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"Preloader_load__vbWIf\",\"loading\":\"Preloader_loading__2e-Fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Packs_page__221le\",\"overlay\":\"Packs_overlay__3aer9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorBar_wrapper__27zvi\",\"errorMessage\":\"ErrorBar_errorMessage__3uvBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2AWFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Login_text__1P899\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1mLlA\"};","import {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\nimport style from './Link.module.scss'\r\n\r\nexport const Link: React.FC<PropsType> = (props) => {\r\n    const {path, title} = props\r\n    return (\r\n        <NavLink to={path} className={style.link}>{title}</NavLink>\r\n    )\r\n}\r\ntype PropsType = {\r\n    path: string\r\n    title?: string | null\r\n}\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport style from './Input.module.scss'\r\n\r\ntype InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\nexport function Input(props: InputPropsType) {\r\n    return (\r\n        <>{props.type === 'checkbox' ?\r\n            <label className={style.checkbox}>\r\n                <input className={props.type === 'checkbox' ? style.checkbox : style.input}{...props}/>\r\n                {props.placeholder}\r\n            </label> :\r\n            <input className={props.type === 'checkbox' ? style.checkbox : style.input}{...props}/>}\r\n        </>\r\n    );\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport style from './Button.module.scss'\r\n\r\ntype PropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nexport const Button: React.FC<PropsType> = (props) => {\r\n    const {name, disabled, children} = props\r\n    return <button {...props}\r\n                   className={props.disabled ? `${style.btnDisabled} ${style.simpleButton}` : style.simpleButton}\r\n                   disabled={disabled}>{name ? name : children}</button>\r\n}\r\n\r\nexport const ButtonFile:React.FC<PropsType> = (props) => {\r\n    const {children} = props\r\n    return <label className={style.simpleButton}>\r\n        upload file\r\n        {children}\r\n    </label>\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0'\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true\r\n});\r\n","import {instance} from '../../../../dal/api'\r\n\r\n\r\nexport const loginAPI = {\r\n    async signIn(email: string, password: string, rememberMe: boolean) {\r\n        const result = await instance.post('/auth/login', {email, password, rememberMe})\r\n        return result.data\r\n    },\r\n    async authMe() {\r\n        const result = await instance.post('/auth/me')\r\n        return result.data\r\n    },\r\n    async refreshProfile(name: string, img='') {\r\n        const avatar = img ? img : ''\r\n        const result = await instance.put('/auth/me', {name, avatar })\r\n        return result.data\r\n    },\r\n    async signOut() {\r\n        await instance.delete('/auth/me')\r\n\r\n    }\r\n}\r\n","import {authMe} from '../Login/bll/loginReducer'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\n\r\nconst initialState = {\r\n    initialApp: false,\r\n    isLoading: false,\r\n    error: null as string | null\r\n}\r\nexport const appReducer = (state: InitialState = initialState, action: Actions) => {\r\n    switch (action.type) {\r\n        case 'INITIAL/APP/REDUCER':\r\n        case 'PAYLOAD/APP/REDUCER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const payload = (isLoading: boolean, error: string | null) => {\r\n    return {type: 'PAYLOAD/APP/REDUCER', payload: {isLoading, error}} as const\r\n}\r\nexport const initialApp = (initialApp: boolean) => {\r\n    return {type: 'INITIAL/APP/REDUCER', payload: {initialApp}} as const\r\n}\r\nexport const initApp = ():ThunkAction =>async (dispatch) => {\r\n    await dispatch(authMe())\r\n    dispatch(initialApp(true))\r\n}\r\ntype InitialState = typeof initialState\r\nexport type AppPayloadType = ReturnType<typeof payload>\r\ntype ThunkAction = ThunkActionType<Actions>\r\ntype Actions = AppPayloadType | ReturnType<typeof initialApp>\r\n","import {InferActionTypes, ThunkActionType} from '../../../../entites/entites'\r\nimport {loginAPI} from '../api/loginAPI'\r\nimport {Dispatch} from 'redux'\r\nimport {AppPayloadType, payload} from '../../InitialApp/appReducer'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    profile: {\r\n        name: null as string | null,\r\n        id: null as string | null,\r\n        avatar: null as string | null\r\n    },\r\n    success: false\r\n}\r\n\r\nexport const loginReducer = (state: LoginType = initialState, action: LoginActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_PROFILE/REDUCER':\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    name: action.name,\r\n                    id: action.id,\r\n                    avatar: action.avatar\r\n                }\r\n            }\r\n        case 'AUTH_ME/LOGIN/REDUCER':\r\n            return {\r\n                ...state,\r\n                isAuth: action.auth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// action creator\r\nconst actions = {\r\n    setAthMe: (auth: boolean) => ({type: 'AUTH_ME/LOGIN/REDUCER', auth} as const),\r\n    setProfile: (name: string | null, id: string | null, avatar: string | null) =>\r\n        ({type: 'SET_PROFILE/REDUCER', name, id, avatar} as const)\r\n}\r\n\r\n\r\n//thunk\r\nexport const signIn = (email: string, password: string, rememberMe = false): LoginThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        try {\r\n            await loginAPI.signIn(email, password, rememberMe)\r\n            dispatch(payload(false, null))\r\n            await dispatch(authMe())\r\n        } catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(payload(false, err))\r\n        }\r\n    }\r\n}\r\nexport const authMe = (): LoginThunkType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await loginAPI.authMe()\r\n        Cookies.set('token', data.token)\r\n        const {name, _id, avatar} = data\r\n        dispatch(actions.setAthMe(true))\r\n        dispatch(payload(false, null))\r\n        dispatch(actions.setProfile(name, _id, avatar))\r\n\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    await loginAPI.signOut()\r\n    dispatch(actions.setProfile(null, null, null))\r\n    dispatch(actions.setAthMe(false))\r\n}\r\nexport const changeProfile = (value: string, image= '') => async (dispatch:Dispatch) => {\r\n   const result =  await loginAPI.refreshProfile(value, image)\r\n    const {name, _id, avatar} = result.updatedUser\r\n    dispatch(actions.setProfile(name, _id, avatar))\r\n}\r\n\r\n\r\n//type\r\ntype LoginType = typeof initialState\r\ntype LoginActionsType = InferActionTypes<typeof actions>\r\ntype LoginThunkType = ThunkActionType<LoginActionsType | AppPayloadType>\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {signIn} from '../bll/loginReducer'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {AppStateType} from '../../../../bll/store'\r\n\r\nimport style from './Login.module.scss'\r\nimport {PATH_PROFILE, PATH_REGISTRATION} from '../../../../Routes/Routes'\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>('testAcc@mail.ru')\r\n    const [pass, setPass] = useState<string>('testAcc@mail.ru123')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(true)\r\n    const {isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n    const dispatch = useDispatch()\r\n\r\n    const changeEmailHandler = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\r\n    const changePassHandler = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\r\n    const changeRememberHandler = (event: ChangeEvent<HTMLInputElement>) => setRememberMe(event.target.checked)\r\n    const onSendHandler = () => dispatch(signIn(email, pass, rememberMe))\r\n\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PATH_PROFILE}/>\r\n    }\r\n    const styleLogin = {\r\n        width: '200px',\r\n        marginTop: '10px',\r\n        letterSpacing: '10px'\r\n    }\r\n    return (\r\n        <div className={'page-form'}>\r\n            <h2>Login</h2>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Input placeholder={'password'} type={'password'} onChange={changePassHandler} value={pass}/>\r\n            <Input placeholder={'remember me'} type={'checkbox'} onChange={changeRememberHandler} checked={rememberMe}/>\r\n            <p className={style.text}>forgot password or email <NavLink to={'/forgot'}>forgot</NavLink></p>\r\n            <NavLink to={PATH_REGISTRATION}>registration</NavLink>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={isLoading} style={styleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n","import {instance} from '../../../../dal/api'\r\n\r\nexport const regAPI  = {\r\n    async register(email: string, password: string) {\r\n        const result = await instance.post('/auth/register', {email, password})\r\n        return  result.data\r\n    }\r\n}\r\n","import {ThunkActionType} from '../../../../entites/entites';\r\nimport {regAPI} from '../api/regAPI';\r\nimport {AppPayloadType, payload} from '../../InitialApp/appReducer';\r\n\r\nconst initialState = {\r\n    success: false\r\n}\r\n\r\n\r\nexport const registerReducer = (state: InitialState = initialState, action: RegisterActionsType) => {\r\n    switch (action.type) {\r\n        case 'PAYLOAD/REGISTER/REDUCER':\r\n            return {\r\n                ...state, success: action.success\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creator\r\nexport const setSuccess = (success: boolean) => ({type: 'PAYLOAD/REGISTER/REDUCER', success} as const)\r\n//thunk\r\nexport const registerThunk = (email: string, password: string, confirmedPassword: string): ThunkRegisterType => {\r\n    return async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        if (password !== confirmedPassword)\r\n            dispatch(payload(false, 'Password is not match'))\r\n        else if (email === '' || password === '' || confirmedPassword === '')\r\n            dispatch(payload(false, 'All field is required!'))\r\n        else if (password.length <= 7 || confirmedPassword.length <= 7)\r\n            dispatch(payload(false, 'password must be more than 7 char!'))\r\n        else if (!email.match(/^[\\w][\\w-.]*@[\\w-]+\\.[a-z]{2,7}$/i))\r\n            dispatch(payload(false, 'Email is not valid!'))\r\n        else {\r\n            try {\r\n                await regAPI.register(email, password)\r\n                dispatch(setSuccess(true))\r\n                dispatch(payload(false, null))\r\n\r\n            } catch (e) {\r\n                dispatch(payload(false, e.response.data.error))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//type\r\ntype InitialState = typeof initialState\r\ntype ThunkRegisterType = ThunkActionType<RegisterActionsType | AppPayloadType>\r\ntype RegisterActionsType = ReturnType<typeof setSuccess>\r\n","import React from 'react'\r\nimport style from './Preloader.module.scss'\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={style.load}>\r\n            <div className={style.loading}>Loading</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {registerThunk, setSuccess} from '../bll/registerReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Preloader} from '../../../../components/helpComponent/Preloader'\r\n\r\nexport const RegisterForm = React.memo(() => {\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const dispatch = useDispatch()\r\n    const {success} = useSelector((state: AppStateType) => state.register)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n\r\n    const changeEmailHandler = (event: ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)\r\n    const changePassHandler = (event: ChangeEvent<HTMLInputElement>) => setPass(event.target.value)\r\n    const changeConfirmHandler = (event: ChangeEvent<HTMLInputElement>) => setConfirm(event.target.value)\r\n    const onSendHandler = () => dispatch(registerThunk(email, pass, confirm))\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSuccess(false))\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (success) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={'page-form'}>\r\n            <h2>Register</h2>\r\n            <div>{isLoading && <Preloader/>}</div>\r\n            <br/>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Input placeholder={'password'} type={'password'} onChange={changePassHandler} value={pass}/>\r\n            <Input placeholder={'confirm password'} type={'password'} onChange={changeConfirmHandler} value={confirm}/>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={isLoading}/>\r\n        </div>\r\n    )\r\n})\r\n","import {instance} from '../../../../dal/api'\r\n\r\nexport const recoveryAPI = {\r\n    async sendRequest(email: string, html1: string, html2: string) {\r\n        const result = await instance.post('/auth/forgot', {email, html1, html2})\r\n        return result.data\r\n    },\r\n    async newPassword(token: string, password: string) {\r\n        const result = await instance.post('/auth/set-new-password', {token, password})\r\n        return result.data\r\n    }\r\n}\r\n","import {InferActionTypes} from '../../../../entites/entites'\r\nimport {Dispatch} from 'redux';\r\nimport {recoveryAPI} from '../api/recoveryAPI';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false\r\n}\r\ntype RecoveryType = typeof initialState\r\ntype RecoveryActions = InferActionTypes<typeof actions>\r\nexport const recoveryReducer = (state:RecoveryType = initialState, action: RecoveryActions) => {\r\n    switch (action.type) {\r\n        case 'RECOVERY/REDUCER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    recoveryPayload: (loading: boolean, error: string, success: boolean) =>({type: 'RECOVERY/REDUCER', payload: {\r\n            loading, error, success\r\n        }})\r\n}\r\n\r\nexport const recoveryThunk = (email: string) => {\r\n    return async (dispatch: Dispatch<RecoveryActions>) => {\r\n        dispatch(actions.recoveryPayload(true, '', false))\r\n        try {\r\n            const html1 = \"<a href='https://ravilaxmadyllin.github.io/decks/#/reset-password/\"\r\n            const html2 = \">reset-password-link</a>\"\r\n            const data = await recoveryAPI.sendRequest(email.toLowerCase(), html1, html2)\r\n            dispatch(actions.recoveryPayload(false, '', data.success))\r\n        }\r\n        catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(actions.recoveryPayload(false, err, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const newPassword = (token: string, password: string) => {\r\n    return async (dispatch: Dispatch<RecoveryActions>) => {\r\n        dispatch(actions.recoveryPayload(true, '', false))\r\n        try {\r\n            let result = await recoveryAPI.newPassword(token, password)\r\n            dispatch(actions.recoveryPayload(false, '', result.success))\r\n        }\r\n        catch (e) {\r\n            const err = e.response.data.error\r\n            dispatch(actions.recoveryPayload(false, err, false))\r\n        }\r\n\r\n\r\n    }\r\n}\r\n","import {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport React, {useCallback, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {recoveryThunk} from '../bll/recoveryReducer';\r\n\r\n\r\nexport const Forgot = React.memo( () => {\r\n    const {loading, success, error} =  useSelector((state: AppStateType) => state.recovery )\r\n    const [email, setEmail] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const changeEmailHandler = useCallback( (event) => {\r\n        setEmail(event.target.value)\r\n    },[setEmail])\r\n\r\n    const onSendHandler = useCallback( () => {\r\n        dispatch(recoveryThunk(email))\r\n    }, [dispatch, email])\r\n    return(\r\n        <div className={'page-form'}>\r\n            <h2>forgot password</h2>\r\n            {loading && <span style={{fontWeight: 'bold'}}>loading</span>}\r\n            {error && <span style={{color: 'red'}}>{error}</span>}\r\n            {success && <span style={{fontWeight: 'bold'}}>message send to email</span>}\r\n            <br/>\r\n            <Input placeholder={'email'} onChange={changeEmailHandler} value={email}/>\r\n            <Button name={'send'} onClick={onSendHandler} disabled={loading}/>\r\n        </div>\r\n    )\r\n})\r\n","import {Input} from '../../../../components/helpComponent/Input'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\nimport React, {useCallback, useState} from 'react'\r\nimport { useParams, RouteComponentProps, Redirect } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../bll/store';\r\nimport { newPassword } from '../bll/recoveryReducer';\r\nimport { PATH_LOGIN } from '../../../../Routes/Routes';\r\n\r\n\r\nexport const NewPassword = React.memo( (props: RouteComponentProps) => {\r\n    const {loading, error, success} = useSelector( (state: AppStateType) => state.recovery)\r\n    const [password, setPassword] = useState('')\r\n    const {token} =  useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const setNewPassword = useCallback( (event) => {\r\n        setPassword(event.target.value)\r\n    }, [setPassword])\r\n    const sendHandler = () => {\r\n        dispatch(newPassword(token, password))\r\n    }\r\n    if(success) {\r\n        return <Redirect to={PATH_LOGIN} />\r\n    }\r\n    return(\r\n        <div className={'page-form'}>\r\n            <h3>new password</h3>\r\n            {loading && <span style={{fontWeight: 'bold'}}>loading</span>}\r\n            {error && <span style={{color: 'red'}}>{error}</span>}\r\n            <Input placeholder={'new password'} type={'password'} value={password} onChange={setNewPassword}/>\r\n            <Button name={'send'} disabled={loading} onClick={sendHandler}/>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useState} from 'react'\r\nimport style from './Pagination.module.scss'\r\ntype PaginationType = {\r\n    cardPacksTotalCount: number\r\n    page: number\r\n    onPageChanged: (number: number) => void\r\n    portionSize: number\r\n\r\n}\r\nexport const Pagination = (props: PaginationType) => {\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    // pageCount сколько всего страничек\r\n    let pageCount = Math.ceil(props.cardPacksTotalCount / props.portionSize)\r\n    let sizePage = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        sizePage.push(i)\r\n    }\r\n\r\n    // portionCount количество порций\r\n    const portionCount = Math.ceil(pageCount / props.portionSize)\r\n\r\n    const leftPortion = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortion = portionNumber * props.portionSize\r\n    const filteredPage = sizePage.filter(p => p >= leftPortion && p <= rightPortion)\r\n    return (\r\n        <div className={style.pagination}>{portionNumber > 1 && <span onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}> <button>{'<'}</button> </span>}\r\n            {filteredPage.map(p => {\r\n                return <span onClick={() => props.onPageChanged(p)} key={p}>{p === props.page ? <b>{p}</b> : p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <span onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}> <span>{'>'}</span> </span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import {instance} from '../../../dal/api'\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    _id: string\r\n}\r\nexport type ResponseCardType = {\r\n    cards: Array<CardType>\r\n    error: string\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: string\r\n}\r\nexport const cardsAPI = {\r\n    async getCards(packId: string, page = 1) {\r\n        const id =  `?cardsPack_id=${packId}`\r\n        const result = await instance\r\n            .get<ResponseCardType>(`/cards/card${id}&page=${page}&pageCount=6`)\r\n        return result.data\r\n    },\r\n    async createCard(id: string, question: string, answer = '') {\r\n        const result = await instance.post('/cards/card', {\r\n            card: {\r\n                cardsPack_id: id,\r\n                question,\r\n                answer,\r\n            }\r\n        })\r\n        return result.data\r\n    },\r\n    async deleteCard(id:string) {\r\n        const result = await instance.delete(`/cards/card?id=${id}`)\r\n        return result.data\r\n    },\r\n    async updateCard(id:string, question: string, answer = '') {\r\n        const result = await instance.put('/cards/card',{\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n            }\r\n\r\n        })\r\n        return result.data\r\n    },\r\n    async grateCard(id: string, grade: number) {\r\n       await instance.put(`/cards/grade`, {card_id: id, grade})\r\n    }\r\n}\r\n","import {instance} from '../../../dal/api'\r\n\r\nexport type CardPack = {\r\n    cardsCount: number\r\n    grade: number\r\n    name: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\nexport type PacksType = {\r\n    cardPacks: Array<CardPack>\r\n    cardPacksTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    error?: string\r\n}\r\ntype DataType = {\r\n    success: boolean\r\n    token: string\r\n    error?: string\r\n}\r\nexport const packsAPI = {\r\n    async getPacks(search: string, page = 1) {\r\n        const packName = search ? `&packName=${search}`: ''\r\n        const result = await instance\r\n            .get<PacksType>(`/cards/pack?page=${page}${packName}&pageCount=6`)\r\n        return result.data\r\n    },\r\n    async createPack(value: string) {\r\n        const result = await instance.post<DataType>('/cards/pack', {\r\n            cardsPack: {\r\n                name: value\r\n            }\r\n        })\r\n        return result.data\r\n    },\r\n    async deletePack(id:string) {\r\n        const result = await instance.delete<DataType>(`/cards/pack?id=${id}`)\r\n        return result.data\r\n    },\r\n    async updatePack(id:string, value: string) {\r\n    const result = await instance.put<DataType>('/cards/pack',{\r\n        cardsPack: {\r\n            _id: id,\r\n            name: value\r\n        }\r\n    })\r\n        return result.data\r\n    }\r\n}\r\n","import {CardPack, packsAPI} from '../api/packsAPI'\r\nimport {InferActionTypes, ThunkActionType} from '../../../entites/entites'\r\nimport {setTotalPage} from '../../Search/bll/searchReducer'\r\nimport {AppPayloadType, payload} from '../../auth/InitialApp/appReducer'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst initialState = {\r\n    packs: [] as Array<CardPack>,\r\n}\r\nexport const packsReducer = (state: InitialState = initialState, action: PacksActionsType) => {\r\n    switch (action.type) {\r\n        case 'PACKS_REDUCER/SET_PACKS':\r\n            return {...state, packs: [...action.packs]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setPacksSuccess: (packs: Array<CardPack>) => ({type: 'PACKS_REDUCER/SET_PACKS', packs} as const)\r\n}\r\n\r\nexport const getPacks = (search = '', page = 1): ThunkPacksType => async (dispatch, getState) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await packsAPI.getPacks(search, page)\r\n        Cookies.set('token', data.token)\r\n        dispatch(setTotalPage(data.cardPacksTotalCount, page))\r\n        dispatch(actions.setPacksSuccess(data.cardPacks))\r\n        dispatch(payload(false, null))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const createPack = (value: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.createPack(value)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch\r\n        (e) {\r\n        dispatch(payload(true, e.response.data.error))\r\n    }\r\n}\r\nexport const updatePack = (id: string, value: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.updatePack(id, value)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const deletePack = (id: string): ThunkPacksType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await packsAPI.deletePack(id)\r\n        dispatch(payload(false, null))\r\n        dispatch(getPacks())\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\ntype InitialState = typeof initialState\r\ntype ThunkPacksType = ThunkActionType<PacksActionsType | AppPayloadType>\r\ntype PacksActionsType = InferActionTypes<typeof actions>\r\n","import {InferActionTypes, ThunkActionType} from '../../../entites/entites'\r\nimport {getPacks} from '../../Packs/bll/packsReducer'\r\n\r\nconst initialState = {\r\n    settings: {\r\n        search: '',\r\n        page:1,\r\n        total: 10\r\n    }\r\n}\r\n\r\nexport const searchReducer = (state:InitialStateType = initialState, action: ActionsSearchType) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_REDUCER/SET_SEARCH':\r\n        case 'SEARCH_REDUCER/SET_CURRENT_PAGE':\r\n        case 'SEARCH_REDUCER/SET_TOTAL_COUNT':return {\r\n            ...state,\r\n            settings: {...state.settings, ...action.payload}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n// action creator\r\nexport const actions = {\r\n    setSearch: (search: string) => ({type:'SEARCH_REDUCER/SET_SEARCH', payload: {search}} as const),\r\n    setCurrentPage: (page: number) => ({type:'SEARCH_REDUCER/SET_CURRENT_PAGE', payload:{page} } as const),\r\n    setTotalCount: (total: number) => ({type:'SEARCH_REDUCER/SET_TOTAL_COUNT', payload:{total} } as const)\r\n}\r\n\r\n// thunk\r\nexport const setTotalPage = (total: number, page: number):ThunkSearchType =>(dispatch) => {\r\n    dispatch(actions.setTotalCount(total))\r\n    dispatch(actions.setCurrentPage(page))\r\n}\r\nexport const setSearch = (value: string):ThunkSearchType => async (dispatch) => {\r\n    dispatch(actions.setSearch(value))\r\n    dispatch(getPacks(value))\r\n}\r\nexport const setPage = (num: number):ThunkSearchType => async (dispatch, getState) => {\r\n    dispatch(actions.setCurrentPage(num))\r\n}\r\n\r\n// type\r\ntype InitialStateType = typeof initialState\r\ntype ActionsSearchType = InferActionTypes<typeof actions>\r\ntype ThunkSearchType = ThunkActionType<ActionsSearchType>\r\n","import {cardsAPI, CardType} from '../api/cardsAPI'\r\nimport {setTotalPage} from '../../Search/bll/searchReducer'\r\nimport {AppPayloadType, payload} from '../../auth/InitialApp/appReducer'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n}\r\ntype InitialState = typeof initialState\r\nexport const cardsReducer = (state: InitialState = initialState, action: ActionCardsReducerType) => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS/CARDS_REDUCER':\r\n            return {...state, cards: [...action.cards]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCardsSuccess = (cards: Array<CardType>) => ({type: 'SET_CARDS/CARDS_REDUCER', cards} as const)\r\n\r\nexport const getCardThunk = (packId: string, page = 1): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await cardsAPI.getCards(packId, page)\r\n        dispatch(payload(false, null))\r\n        dispatch(setTotalPage(data.cardsTotalCount, page))\r\n        dispatch(setCardsSuccess(data.cards))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const addCard = (packId: string, question: string, answer: string): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await cardsAPI.createCard(packId, question, answer)\r\n        dispatch(payload(false, null))\r\n        dispatch(getCardThunk(packId))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const deleteCard = (cardId: string, packId: string): ThunkCardsType => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        await cardsAPI.deleteCard(cardId)\r\n        dispatch(payload(false, null))\r\n        dispatch(getCardThunk(packId))\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const updateCard = (cardId: string, packId: string, question: string, answer: string): ThunkCardsType =>\r\n    async (dispatch) => {\r\n        dispatch(payload(true, null))\r\n        try {\r\n            await cardsAPI.updateCard(cardId, question, answer)\r\n            dispatch(payload(false, null))\r\n            dispatch(getCardThunk(packId))\r\n        } catch (e) {\r\n            dispatch(payload(false, e.response.data.error))\r\n        }\r\n    }\r\nexport const sendGrade = (id: string, grades: number): ThunkCardsType => async (dispatch) => {\r\n    await cardsAPI.grateCard(id, grades)\r\n}\r\ntype ActionCardsReducerType = ReturnType<typeof setCardsSuccess>\r\ntype ThunkCardsType = ThunkActionType<ActionCardsReducerType | AppPayloadType>\r\n","import React from 'react'\r\nimport style from './Modal.module.scss'\r\n\r\n\r\nexport const Modal: React.FC<ModalType> = ({children, closeModal, show, width}) => {\r\n    const closeHandler = (event: React.KeyboardEvent & React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        // if (event.target === overlayRef.current) closeModal()\r\n        closeModal()\r\n    }\r\n    if (!show) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <div className={style.modalOverlay} onClick={closeHandler} />\r\n            <div className={style.modal} style={{width}}>\r\n                <div className={style.modalClose} onClick={closeHandler}>&times;</div>\r\n                {children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\ntype ModalType = {\r\n    show: boolean\r\n    closeModal: () => void\r\n    width?: string\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input} from './Input'\r\nimport {Button} from './Button'\r\nimport {Modal} from '../../fatures/Modal/Modal'\r\n\r\n\r\nexport const FormCardModal: React.FC<PropsType> = (props) => {\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const closeModalHandler = () => {\r\n        props.setOpenModal(!props.openModal)\r\n        setQuestion('')\r\n        setAnswer('')\r\n    }\r\n    const addItemHandler = () => {\r\n        question.trim() && props.addItem(question, answer)\r\n        closeModalHandler()\r\n    }\r\n    return (\r\n        <Modal show={props.openModal} closeModal={closeModalHandler}>\r\n            <div>\r\n                <h2>{props.title} :</h2>\r\n                <Input value={question} onChange={(e) => setQuestion(e.currentTarget.value)}/>\r\n                <Input value={answer} onChange={(e) => setAnswer(e.currentTarget.value)}/>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <Button name={'send'} style={{margin: '5px'}} onClick={addItemHandler}/>\r\n                <Button name={'back'} style={{margin: '5px'}} onClick={closeModalHandler}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    openModal: boolean\r\n    setOpenModal: (open: boolean) => void\r\n    addItem: (question: string, answer: string) => void\r\n    title: string\r\n}\r\n","import React from 'react'\r\nimport style from './Card.module.scss'\r\nimport {CardType} from '../api/cardsAPI'\r\n\r\ntype PropsType = {\r\n    oneCard: CardType\r\n}\r\nexport const SingleCard:React.FC<PropsType> = (props) => {\r\n    let {oneCard} = props\r\n    if(!oneCard) {\r\n        return  <div>no cards yet</div>\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.items}>\r\n                <div className={`${style.front}  ${style.side}`}>\r\n                    <div className={style.content}>\r\n                        <h1>question</h1>\r\n                        <p>{oneCard.question}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={`${style.back} ${style.side}`}>\r\n                    <div className={style.content}>\r\n                        <h1>answer</h1>\r\n                        <p>{oneCard.answer}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {CardType} from '../../Cards/api/cardsAPI'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {SingleCard} from '../../Cards/ui/SingleCard'\r\nimport {Modal} from '../../Modal/Modal'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {sendGrade} from '../../Cards/bll/cardsReducer'\r\n\r\n\r\nexport const LearnPage: React.FC<PropsType> = ({id, cards, show, onClose}) => {\r\n    const [currentCard, setCurrentCard] = useState<CardType>(cards[0])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (cards.length > 0) setCurrentCard(getCard(cards))\r\n    }, [dispatch, id, cards])\r\n    const onNext = () => setCurrentCard(getCard(cards))\r\n    const sentGrade = (grades: number) => {\r\n        dispatch(sendGrade(currentCard._id, grades))\r\n        setCurrentCard(getCard(cards))\r\n    }\r\n    return (\r\n        <Modal show={show} closeModal={onClose}>\r\n            <p>Learn page : </p>\r\n                <Button onClick={onNext} name={'next'} disabled={!currentCard}/>\r\n                <SingleCard oneCard={currentCard}/>\r\n            {currentCard && grades.map((g, i) => (\r\n                <Button key={'grade-' + i}\r\n                        style={{display: 'inline-flex', marginRight: '5px'}}\r\n                        onClick={() => sentGrade((i + 1))}>{g}</Button>\r\n            ))}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst grades = ['😡', '😱', '😨', '😲', '🙂']\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\r\n    const rand = Math.random() * sum\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1})\r\n    return cards[res.id + 1]\r\n}\r\ntype PropsType = {\r\n    id: string\r\n    cards: Array<CardType>\r\n    show: boolean\r\n    onClose: () => void\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {RouteComponentProps, useParams} from 'react-router-dom'\r\nimport {Pagination} from '../../Pagination/Pagination'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addCard, deleteCard, getCardThunk, updateCard} from '../bll/cardsReducer'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {FormCardModal} from '../../../components/helpComponent/FormCardsModal'\r\nimport {LearnPage} from '../../LearnPage/ui/LearnPage'\r\nimport style from './Card.module.scss'\r\n\r\n\r\nexport const Cards = React.memo((props: RouteComponentProps<any>) => {\r\n    const [modalCreate, setModalCreate] = useState(false)\r\n    const [modalUpdate, setModalUpdate] = useState(false)\r\n    const [showLearn, setShowLearn] = useState(false)\r\n    const [currentId, setCurrentId] = useState('')\r\n    const [page, setPage] = useState(1)\r\n    const {cards} = useSelector((state: AppStateType) => state.card)\r\n    const {settings} = useSelector((state: AppStateType) => state.search)\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardThunk(id, page))\r\n    }, [dispatch, page, id])\r\n\r\n    const createCardHandler = (question: string, answer: string) => dispatch(addCard(id, question, answer))\r\n    const deleteCardHandler = (cardId: string) => dispatch(deleteCard(cardId, id))\r\n    const updateHandler = (question: string, answer: string) => dispatch(updateCard(currentId, id, question, answer))\r\n\r\n    const openUpdateModal = (cardId: string) => {\r\n        setCurrentId(cardId)\r\n        setModalUpdate(true)\r\n    }\r\n\r\n    return (\r\n        <> <div className={style.page}>\r\n            <div className={style.overlay}>\r\n                <h3> Create card\r\n                    <Button name={'+'} onClick={() => setModalCreate(!modalCreate)}\r\n                            style={{display: 'inline-flex',marginLeft:'10px'}}/>\r\n                </h3>\r\n                <h3> Learn Page\r\n                    <Button name={'Learn Page'} onClick={() => setShowLearn(!showLearn)}\r\n                            style={{display: 'inline-flex',marginLeft:'10px'}}/>\r\n                </h3>\r\n                <FormCardModal openModal={modalCreate} setOpenModal={() => setModalCreate(!modalCreate)}\r\n                               addItem={createCardHandler} title={'Create card'}/>\r\n                <FormCardModal openModal={modalUpdate} setOpenModal={() => setModalUpdate(!modalUpdate)}\r\n                               addItem={updateHandler} title={'update card'}/>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td>Gade</td>\r\n                        <td>delete</td>\r\n                        <td>update</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {cards.map(c => {\r\n                        return <tr key={c.more_id + c.created} id={c._id}>\r\n                            <td>{c.grade}</td>\r\n                            <td onClick={() => deleteCardHandler(c._id)}><span>delete</span></td>\r\n                            <td onClick={() => openUpdateModal(c._id)}><span>update</span></td>\r\n                        </tr>\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <LearnPage id={id} cards={cards} show={showLearn} onClose={() => setShowLearn(!showLearn)}/>\r\n            </div>\r\n            <Pagination cardPacksTotalCount={settings.total}\r\n                        page={settings.page} onPageChanged={setPage} portionSize={6}/>\r\n        </div>\r\n        </>\r\n    )\r\n})\r\n\r\n","import React from 'react'\r\nimport userPhoto from '../../../../assets/avatar.png'\r\nimport style from './Profile.module.scss'\r\nimport {Button} from '../../../../components/helpComponent/Button'\r\n\r\n\r\nexport const Profile = React.memo(({profile, logout, showSetting}: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={style.page}>\r\n            <div className={style.overlayProfile}>\r\n                <div className={style.profile}>\r\n                    <img src={profile.avatar ? profile.avatar : userPhoto} alt=\"user\"/>\r\n                </div>\r\n                <div>{profile.name}</div>\r\n                <Button name={'logout'} style={{marginTop: '30px'}} onClick={logout}/>\r\n                <Button name={'setting'} style={{marginTop: '0'}} onClick={showSetting}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\ntype ProfilePropsType = {\r\n    profile: {\r\n        name: string | null,\r\n        id: string | null,\r\n        avatar: string | null\r\n    }\r\n    logout: () => void\r\n    showSetting: () => void\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../components/helpComponent/Input'\r\nimport {Button} from '../../components/helpComponent/Button'\r\ntype PropsType = {\r\n    search: (value: string) => void\r\n}\r\nexport const Search = React.memo((props:PropsType) => {\r\n    const [value, setValue] = useState('')\r\n    const changeInput = (event: ChangeEvent<HTMLInputElement>) => setValue(event.target.value)\r\n    const searchHandler = () => props.search(value)\r\n    const onKeyHandler = (e: React.KeyboardEvent) => {\r\n        if(e.charCode === 13) props.search(value)\r\n    }\r\n    return(\r\n        <>\r\n            <Input placeholder={'search'} value={value} onChange={changeInput} onKeyPress={onKeyHandler}/>\r\n            <Button name={'search'} style={{display: 'inline-block'}} onClick={searchHandler}/>\r\n        </>\r\n    )\r\n})\r\n","import React, {useState} from 'react'\r\nimport {Input} from './Input'\r\nimport {Button} from './Button'\r\nimport {Modal} from '../../fatures/Modal/Modal'\r\n\r\n\r\nexport const FormModal: React.FC<PropsType> = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const closeModalHandler = () => {\r\n        props.setOpenModal(!props.openModal)\r\n        setValue('')\r\n    }\r\n    const addDeckHandler = () => {\r\n        value.trim() && props.add(value)\r\n        closeModalHandler()\r\n    }\r\n    return (\r\n        <Modal show={props.openModal} closeModal={closeModalHandler}>\r\n            <div>\r\n                <h2>{props.title} :</h2>\r\n                <Input value={value} onChange={(e) => setValue(e.currentTarget.value)}/>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <Button name={'send'} style={{margin: '5px'}} onClick={addDeckHandler}/>\r\n                <Button name={'back'} style={{margin: '5px'}} onClick={closeModalHandler}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    openModal: boolean\r\n    setOpenModal: (open: boolean) => void\r\n    add: (value: string) => void\r\n    title: string\r\n}\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deletePack, updatePack} from '../bll/packsReducer'\r\nimport {Link} from '../../../components/helpComponent/Link'\r\nimport {FormModal} from '../../../components/helpComponent/FormModal'\r\nimport {PATH_CARD} from '../../../Routes/Routes'\r\n\r\n\r\nexport const CardPack = React.memo((props: CardType) => {\r\n    const [changeModal, setChangeModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const openModal = () => setChangeModal(!changeModal)\r\n    const updateHandler = (value: string) => dispatch(updatePack(props.id, value))\r\n    const deleteHandler = () => dispatch(deletePack(props.id))\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td><Link path={PATH_CARD + props.id} title={props.name}/></td>\r\n                <td>{props.grade}</td>\r\n                <td>{props.cardsCount}</td>\r\n                <td>\r\n                    <div className={'button'} onClick={deleteHandler}>delete</div>\r\n                    <div className={'button'} onClick={openModal}>change</div>\r\n                </td>\r\n            </tr>\r\n            <FormModal openModal={changeModal}\r\n                       setOpenModal={openModal}\r\n                       add={updateHandler} title={'new title pack'}/>\r\n        </>\r\n    )\r\n})\r\ntype CardType = {\r\n    id: string\r\n    name: string,\r\n    grade: number\r\n    cardsCount: number\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {createPack, getPacks} from '../bll/packsReducer'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport {Search} from '../../Search/Search'\r\nimport {CardPack} from './Pack'\r\nimport {setPage, setSearch} from '../../Search/bll/searchReducer'\r\nimport {Pagination} from '../../Pagination/Pagination'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {FormModal} from '../../../components/helpComponent/FormModal'\r\nimport {Redirect} from 'react-router-dom'\r\nimport style from './Packs.module.scss'\r\n\r\nexport const CardPacks = React.memo(() => {\r\n    const {packs} = useSelector((state: AppStateType) => state.packs)\r\n    const {settings} = useSelector((state: AppStateType) => state.search)\r\n    const {isLoading} = useSelector((state: AppStateType) => state.app)\r\n    const {isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const [openModal, setOpenModal] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getPacks(settings.search, settings.page))\r\n    }, [dispatch, settings.page, settings.search])\r\n    const openAddDeck = () => setOpenModal(true)\r\n    const addDeck = (value: string) => dispatch(createPack(value))\r\n    const searchInput = useCallback((value: string) => dispatch(setSearch(value)), [dispatch])\r\n    const onChangePage = (num: number) => dispatch(setPage(num))\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={style.page}>\r\n            <h2>PACKS</h2>\r\n            <div>\r\n                <Search search={searchInput}/>\r\n                <Button onClick={openAddDeck} name={'ADD PACK'} disabled={isLoading}/>\r\n            </div>\r\n            <div className={style.overlay}>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td>name</td>\r\n                        <td>Grade</td>\r\n                        <td>total</td>\r\n                        <td>actions</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {packs.map(pack => <CardPack\r\n                        key={pack._id + new Date().getTime()} id={pack._id}\r\n                        name={pack.name} grade={pack.grade}\r\n                        cardsCount={pack.cardsCount}\r\n                    />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Pagination cardPacksTotalCount={settings.total} page={settings.page}\r\n                        onPageChanged={onChangePage} portionSize={20}/>\r\n            <FormModal openModal={openModal} setOpenModal={setOpenModal} add={addDeck} title={'add new decks'}/>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Input} from '../../../../components/helpComponent/Input'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {Button, ButtonFile} from '../../../../components/helpComponent/Button'\r\nimport ava from '../../../../assets/avatar.png'\r\nimport style from './SettingProfile.module.scss'\r\nimport {Modal} from '../../../Modal/Modal'\r\nimport {changeProfile} from '../../Login/bll/loginReducer'\r\n\r\nexport const SettingProfile: React.FC<PropsType> = ({show, onShow}) => {\r\n    const {profile} = useSelector((state: AppStateType) => state.login)\r\n    const [value, setValue] = useState<string | null>(profile.name)\r\n    const [avatar, setAvatar] = useState<string | null>(profile.avatar)\r\n    const dispatch = useDispatch()\r\n    const submitHandler = () => {\r\n        if (value) {\r\n            if (avatar) {\r\n                dispatch(changeProfile(value, avatar))\r\n            } else dispatch(changeProfile(value, ''))\r\n            onShow()\r\n        }\r\n    }\r\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files && e.target.files[0]\r\n        const reader = new FileReader()\r\n        file && reader.readAsDataURL(file)\r\n        reader.onload = function () {\r\n            setAvatar(typeof reader.result === 'string' ? reader.result : null)\r\n        }\r\n    }\r\n    return (\r\n        <Modal width={'800px'} show={show} closeModal={onShow}>\r\n            <div className={style.wrapper}>\r\n                <div className={style.image}>\r\n                    <img src={avatar || ava} alt=\"\"/>\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.input}>\r\n                        <Input placeholder={'name'} value={value ? value : ''}\r\n                               onChange={(e) => setValue(e.currentTarget.value)}/>\r\n                    </div>\r\n                    <ButtonFile>\r\n                        <Input type={'file'} defaultValue={''}\r\n                               onChange={changeHandler} style={{display: 'none'}}/>\r\n                    </ButtonFile>\r\n                    <Button onClick={submitHandler} style={{margin: '0'}}>sumbit</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\ntype PropsType = {\r\n    show: boolean\r\n    onShow: () => void\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Profile} from './Profile'\r\nimport {CardPacks} from '../../../Packs/ui/Packs'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../../bll/store'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {logout} from '../../Login/bll/loginReducer'\r\nimport {SettingProfile} from './SettingProfile'\r\nimport {PATH_LOGIN} from '../../../../Routes/Routes'\r\n\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const {profile, isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const logoutHandler = () => dispatch(logout())\r\n    if(!isAuth){\r\n        return <Redirect to={PATH_LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={'wrapper'}>\r\n            <Profile profile={profile} logout={logoutHandler} showSetting={() => setShowModal(true)}/>\r\n            <CardPacks/>\r\n            <SettingProfile show={showModal} onShow={() => setShowModal(!showModal)}/>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst baseURL = 'https://cards-nya-back.herokuapp.com/1.0/'\r\nexport const inst = axios.create({\r\n    baseURL\r\n})\r\n\r\n\r\nexport const userAPI = {\r\n    async getUsers(page: number) {\r\n        const token = Cookies.get('token')\r\n        const result = await inst.get<ResponseUserType>(`social/users?token=${token}&page=${page}&pageCount=7`)\r\n        return result.data\r\n    },\r\n    async getUser(token: string, id: string) {\r\n    const result = await inst.get<FindUserType>(`/social/user?token=${token}&id=${id}`)\r\n    return result.data\r\n    },\r\n    async sendMessage(token: string, message: string) {\r\n        const result = await inst.post<ResponseSendMessageType>('social/general/message', {token, message})\r\n        return result.data\r\n    },\r\n    async generalMessages(token: string) {\r\n        const result = await inst.get<ResponseMessagesType>(`/social/general/message?token=${token}`)\r\n        return result.data\r\n    },\r\n\r\n}\r\n\r\n\r\n//type\r\n\r\ntype ResponseUserType = {\r\n    maxPublicCardPacksCount: number\r\n    minPublicCardPacksCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    usersTotalCount: number\r\n    users: Array<UserType>\r\n}\r\nexport type UserType = {\r\n    avatar: string\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    updated: string\r\n    _id: string\r\n}\r\ntype ResponseMessagesType = {\r\n    token: string\r\n    generalChatMessages: Array<MessageType>\r\n}\r\ntype ResponseSendMessageType = {\r\n    token: string\r\n    newGeneralChatMessage: MessageType\r\n}\r\nexport type MessageType = {\r\n    avatar: string\r\n    created: string\r\n    isAdmin: boolean\r\n    message: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\ntype FindUserType = {\r\n    token: string\r\n    user: UserType\r\n}\r\n","import {userAPI, UserType} from '../dal/userAPI'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\nimport Cookies from 'js-cookie'\r\nimport { setTotalPage } from '../../Search/bll/searchReducer'\r\nimport {AppPayloadType, payload} from '../../auth/InitialApp/appReducer'\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>\r\n}\r\nexport const usersReducer = (state = initialState, action: Actions) => {\r\n    switch (action.type) {\r\n        case 'USERS-REDUCER/SET_USERS':\r\n            return {...state, users: [...state.users, ...action.users]}\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst setUsersSuccess = (users: Array<UserType>) => ({type: 'USERS-REDUCER/SET_USERS', users} as const)\r\n\r\nexport const getUsers = (page: number):ThunkAction => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        const data = await userAPI.getUsers(page)\r\n        dispatch(setUsersSuccess(data.users))\r\n        Cookies.set('token', data.token)\r\n        dispatch(setTotalPage(data.usersTotalCount, page))\r\n        dispatch(payload(false, null))\r\n\r\n    }catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\n\r\n//type\r\ntype Actions = ReturnType<typeof setUsersSuccess>\r\ntype ThunkAction = ThunkActionType<Actions | AppPayloadType>\r\n","import {MessageType, userAPI} from '../dal/userAPI'\r\nimport {ThunkActionType} from '../../../entites/entites'\r\nimport Cookies from 'js-cookie'\r\nimport {AppPayloadType, payload} from '../../auth/InitialApp/appReducer'\r\n\r\nconst initialState = {\r\n    messages: [] as Array<MessageType>,\r\n    initialDialog: false\r\n}\r\nexport const chatReducer = (state = initialState, action: Actions) => {\r\n    switch (action.type) {\r\n        case 'CHAT-REDUCER/SET-MESSAGES':\r\n            return {...state, messages: [...action.messages]}\r\n        case 'CHAT-REDUCER/MESSAGE':\r\n            return {...state, messages: [action.body, ...state.messages]}\r\n        case 'CHAT-REDUCER/INITIALDIALOG':\r\n            return {...state, initialDialog: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst setMessagesSuccess = (messages: Array<MessageType>) => ({type: 'CHAT-REDUCER/SET-MESSAGES', messages}) as const\r\nconst sendMessageSuccess = (body: MessageType) => ({type: 'CHAT-REDUCER/MESSAGE', body}) as const\r\nconst initialDialog = (value: boolean) => ({type: 'CHAT-REDUCER/INITIALDIALOG', value}) as const\r\n\r\nexport const getGeneralMessages = (): ThunkActions => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        let token = Cookies.get('token')\r\n        if (token) {\r\n            const result = await userAPI.generalMessages(token)\r\n            dispatch(initialDialog(true))\r\n            dispatch(payload(false, null))\r\n            dispatch(setMessagesSuccess(result.generalChatMessages))\r\n            Cookies.set('token', result.token)\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\nexport const sendMessage = (body: string): ThunkActions => async (dispatch) => {\r\n    dispatch(payload(true, null))\r\n    try {\r\n        let token = Cookies.get('token')\r\n        if (token) {\r\n            debugger\r\n            const result = await userAPI.sendMessage(token, body)\r\n            Cookies.set('token', result.token)\r\n            dispatch(payload(false, null))\r\n            dispatch(sendMessageSuccess(result.newGeneralChatMessage))\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(payload(false, e.response.data.error))\r\n    }\r\n}\r\n\r\n\r\n//type\r\ntype Actions = ReturnType<typeof setMessagesSuccess>\r\n    | ReturnType<typeof sendMessageSuccess>\r\n    | ReturnType<typeof initialDialog>\r\ntype ThunkActions = ThunkActionType<Actions | AppPayloadType>\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {MessageType} from '../dal/userAPI'\r\nimport style from './Chat.module.scss'\r\nimport userPng from '../../../assets/avatar.png'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport {getGeneralMessages, sendMessage} from '../bll/chatReducer'\r\n\r\nexport const Chat = () => {\r\n    const {messages, initialDialog} = useSelector((state: AppStateType) => state.chat)\r\n    const loading = useSelector((state: AppStateType) => state.app.isLoading)\r\n    const [value, setValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getGeneralMessages())\r\n    }, [dispatch])\r\n\r\n    const sendHandler = () => dispatch(sendMessage(value))\r\n    const changeHandler = (event: ChangeEvent<HTMLTextAreaElement>) => setValue(event.currentTarget.value)\r\n\r\n    return <div className={style.chatBlock}>\r\n        <div className={style.wrapper}>\r\n            {[...messages].reverse().map((m, i) => <DialogItem message={m} key={m.user_name + i}/>)}\r\n        </div>\r\n        {initialDialog && <>\r\n            <textarea value={value} onChange={changeHandler}/>\r\n            <Button name={'submit'} disabled={loading} onClick={sendHandler}/>\r\n        </>}\r\n    </div>\r\n}\r\n\r\nconst DialogItem: React.FC<{ message: MessageType }> = ({message}) => {\r\n    const avatar = message.avatar !== 'some avatar' ? message.avatar : null\r\n    const messageDate = new Date(message.updated)\r\n    const todayDate = new Date()\r\n    const oneDay = 24 * 60 * 60 * 1000\r\n    const diffDays = Math.round((todayDate.getTime() - messageDate.getTime()) / (oneDay))\r\n    return (\r\n        <div className={style.dialogItem}>\r\n            <label>\r\n                <img src={avatar || userPng} alt='user'/>\r\n            </label>\r\n            <div className={style.messageBody}>\r\n                <h5>{message.user_name}<span>{diffDays} day ago</span></h5>\r\n                <p>{message.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {UserType} from '../dal/userAPI'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport style from './Users.module.scss'\r\nimport {Button} from '../../../components/helpComponent/Button'\r\nimport userPng from '../../../assets/avatar.png'\r\nimport {getUsers} from '../bll/usersReducer'\r\nimport {setPage} from '../../Search/bll/searchReducer'\r\nimport {Chat} from './Chat'\r\n\r\n\r\nexport const Users = () => {\r\n    const dispatch = useDispatch()\r\n    const {page, total} = useSelector((state: AppStateType) => state.search.settings)\r\n    const users = useSelector((state: AppStateType) => state.users.users)\r\n    const [showUser, setShowUser] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(page))\r\n    }, [page, dispatch])\r\n\r\n    const userBlockRef = useRef(null)\r\n    const scrollHandler = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const {scrollTop, clientHeight, scrollHeight} = event.currentTarget\r\n        if (scrollHeight - Math.ceil(scrollTop) === clientHeight) dispatch(setPage(page + 1))\r\n    }\r\n    const changeHandler = () => setShowUser(!showUser)\r\n\r\n    return (\r\n        <div className={style.wrap}>\r\n            <div className={style.container}>\r\n                <div className={style.btn}>\r\n                    <Button onClick={changeHandler}>show</Button>\r\n                </div>\r\n                {showUser ? <Chat/>\r\n                    : <>\r\n                        <h3>Users</h3> <p>count: {total - users.length}</p>\r\n                        <div className={style.usersBlock} ref={userBlockRef} onScroll={scrollHandler}>\r\n                            {users && users.map((u, i) => {\r\n                                return <User key={u._id + u.created + i} user={u}/>\r\n                            })}\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst User: React.FC<{ user: UserType }> = ({user}) => {\r\n    return (\r\n        <label className={style.userItem}>\r\n            <div className={style.avatar}>\r\n                <img src={user.avatar ? user.avatar : userPng} alt={'user'}/>\r\n            </div>\r\n            <div className={style.userDesc}>\r\n                <h4><span>name :</span> {user.name}</h4>\r\n                <h4> card packs count : {user.publicCardPacksCount}</h4>\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Map, Placemark, YMaps} from 'react-yandex-maps'\r\n\r\nexport const DefMap = () => {\r\n    const data = {\r\n        center: [55.88, 37.54],\r\n        zoom: 14,\r\n        controls: ['zoomControl', 'fullscreenControl']\r\n    }\r\n    return <div style={{minHeight: '50vh', display: 'flex', justifyContent: 'center',\r\n        alignItems: 'center', flexDirection: 'column', marginTop: '4%'}}>\r\n            <YMaps>\r\n                <Map defaultState={data}\r\n                     modules={['control.ZoomControl', 'control.FullscreenControl']} width={600} height={600}\r\n                    // долго искал эту хрень)\r\n                    // https://tech.yandex.com/maps/jsapi/doc/2.1/ref/reference/Map-docpage/#field_detail__events\r\n                     onClick={(e: any) => console.log(e.get('coords'))}>\r\n                    {/*https://react-yandex-maps.now.sh/geo-objects/placemark*/}\r\n                    <Placemark geometry={[55.88624897196259, 37.540146657918264]}/>\r\n                </Map>\r\n            </YMaps>\r\n    </div>\r\n}\r\n","import {Route, Switch} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {Login} from '../fatures/auth/Login/ui/Login'\r\nimport {RegisterForm} from '../fatures/auth/Registration/ui/Register'\r\nimport {Forgot} from '../fatures/auth/Forgot/ui/Forgot'\r\nimport {NewPassword} from '../fatures/auth/Forgot/ui/NewPassword'\r\nimport {Cards} from '../fatures/Cards/ui/Cards'\r\nimport {ProfileContainer} from '../fatures/auth/Profile/ui/ProfileContainer'\r\nimport {Users} from '../fatures/Users/ui/Users'\r\nimport {DefMap} from '../fatures/Map'\r\n\r\nexport const PATH_CARD = '/cards/'\r\nexport const PATH_LOGIN = '/login'\r\nexport const PATH_PROFILE = '/profile'\r\nexport const PATH_REGISTRATION = '/registration'\r\nexport const PATH_FORGOT = '/forgot'\r\nexport const PATH_RESET = '/reset-password/:token'\r\nexport const PATH_USERS = '/users'\r\nexport const PATH_MAP = '/map'\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={PATH_LOGIN} render={() => <Login/>}/>\r\n            <Route path={PATH_PROFILE} render={() => <ProfileContainer/>}/>\r\n            <Route path={PATH_CARD + ':id'} render={(props) => <Cards {...props}/>}/>\r\n            <Route path={PATH_REGISTRATION} render={() => <RegisterForm/>}/>\r\n            <Route path={PATH_FORGOT} render={() => <Forgot/>}/>\r\n            <Route path={PATH_RESET} render={(props) => <NewPassword {...props}/>}/>\r\n            <Route path={PATH_USERS} render={() => <Users/>}/>\r\n            <Route path={PATH_MAP} render={() => <DefMap/>}/>\r\n            <Route path={'*'} render={() => <div>not found</div>}/>\r\n\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport style from './Header.module.scss'\r\nimport ava from '../assets/avatar.png'\r\nimport {Link} from '../components/helpComponent/Link'\r\nimport {PATH_LOGIN, PATH_MAP, PATH_PROFILE, PATH_USERS} from '../Routes/Routes'\r\n\r\n\r\nexport const Header = (props: PropsType) => {\r\n    const {name, avatar} = props.profile\r\n    const userPhoto = avatar ? avatar : ava\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.container}>\r\n                <div>\r\n                    <Link path={PATH_MAP} title={'map'}/>\r\n                    <Link path={PATH_USERS} title={'users'}/>\r\n                </div>\r\n                <div className={style.rightBlock}>\r\n                    {!props.isAuth ? <Link path={PATH_LOGIN} title={'login'}/>\r\n                        : <div className={style.user}>\r\n                            <img src={userPhoto} alt=\"avatar\"/>\r\n                            <Link path={PATH_PROFILE} title={name}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//type\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    profile: {\r\n        name: string | null\r\n        id: string | null\r\n        avatar: string | null\r\n    }\r\n}\r\n","import React from 'react'\r\nimport style from './ErrorBar.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../bll/store'\r\nimport { payload } from '../../fatures/auth/InitialApp/appReducer'\r\nexport const ErrorBar = () => {\r\n    const {error} = useSelector( (state: AppStateType) => state.app)\r\n    const dispatch = useDispatch()\r\n    const closeHandler = () => {\r\n        dispatch(payload(false, null))\r\n    }\r\n    if(!error) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.errorMessage}>\r\n                <div>{error}</div>\r\n                <button onClick={closeHandler}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport './App.scss'\r\nimport {Header} from './Header/Header'\r\nimport {Routes} from './Routes/Routes'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from './bll/store'\r\nimport {ErrorBar} from './components/helpComponent/ErrorBar'\r\nimport {initApp} from './fatures/auth/InitialApp/appReducer'\r\nimport {Preloader} from './components/helpComponent/Preloader'\r\n\r\n\r\nconst App: React.FC = () => {\r\n    const {initialApp, isLoading} = useSelector((state: AppStateType) => state.app)\r\n    const {profile, isAuth} = useSelector((state: AppStateType) => state.login)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(initApp())\r\n    }, [dispatch])\r\n    if (!initialApp) return <div>....loading</div>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header profile={profile} isAuth={isAuth}/>\r\n            <ErrorBar/>\r\n            <Routes/>\r\n            {isLoading && <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {loginReducer} from '../fatures/auth/Login/bll/loginReducer'\r\nimport {registerReducer} from '../fatures/auth/Registration/bll/registerReducer'\r\nimport {recoveryReducer} from '../fatures/auth/Forgot/bll/recoveryReducer'\r\nimport {packsReducer} from '../fatures/Packs/bll/packsReducer'\r\nimport {cardsReducer} from '../fatures/Cards/bll/cardsReducer'\r\nimport {searchReducer} from '../fatures/Search/bll/searchReducer'\r\nimport {appReducer} from '../fatures/auth/InitialApp/appReducer'\r\nimport {usersReducer} from '../fatures/Users/bll/usersReducer'\r\nimport {chatReducer} from '../fatures/Users/bll/chatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    users: usersReducer,\r\n    chat: chatReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recovery: recoveryReducer,\r\n    packs: packsReducer,\r\n    card: cardsReducer,\r\n    search: searchReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './bll/store'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}